FUNCTION_PREVIEW = {
    BJDebugMsg = "msg,",
    RMinBJ = "a, b,",
    RMaxBJ = "a, b,",
    RAbsBJ = "a,",
    RSignBJ = "a,",
    IMinBJ = "a, b,",
    IMaxBJ = "a, b,",
    IAbsBJ = "a,",
    ISignBJ = "a,",
    SinBJ = "degrees,",
    CosBJ = "degrees,",
    TanBJ = "degrees,",
    AsinBJ = "degrees,",
    AcosBJ = "degrees,",
	AtanBJ = "degrees,",
    Atan2BJ = "y, x,",
    AngleBetweenPoints = "locA, locB,",
    DistanceBetweenPoints = "locA, locB,",
    PolarProjectionBJ = "source, dist, angle,",
    GetRandomDirectionDeg = ",",
    GetRandomPercentageBJ = ",",
    GetRandomLocInRect = "whichRect,",
    ModuloInteger = "dividend, divisor,",
    ModuloReal = "dividend, divisor,",
    OffsetLocation = "loc, dx, dy,",
    OffsetRectBJ = "r, dx, dy,",
    RectFromCenterSizeBJ = "center, width, height,",
    RectContainsCoords = "r, x, y,",
    RectContainsLoc = "r, loc,",
    RectContainsUnit = "r, whichUnit,",
    RectContainsItem = "whichItem, r,",
    ConditionalTriggerExecute = "trig,",
    TriggerExecuteBJ = "trig, checkConditions,",
    PostTriggerExecuteBJ = "trig, checkConditions,",
    QueuedTriggerCheck = ",",
    QueuedTriggerGetIndex = "trig,",
    QueuedTriggerRemoveByIndex = "trigIndex,",
    QueuedTriggerAttemptExec = ",",
    QueuedTriggerAddBJ = "trig, checkConditions,",
    QueuedTriggerRemoveBJ = "trig,",
    QueuedTriggerDoneBJ = ",",
    QueuedTriggerClearBJ = ",",
    QueuedTriggerClearInactiveBJ = ",",
    QueuedTriggerCountBJ = ",",
    IsTriggerQueueEmptyBJ = ",",
    IsTriggerQueuedBJ = "trig,",
    GetForLoopIndexA = ",",
    SetForLoopIndexA = "newIndex,",
    GetForLoopIndexB = ",",
    SetForLoopIndexB = "newIndex,",
    PolledWait = "duration,",
    IntegerTertiaryOp = "flag, valueA, valueB,",
    DoNothing = ",",
    CommentString = "commentString,",
    StringIdentity = "theString,",
    GetBooleanAnd = "valueA, valueB,",
    GetBooleanOr = "valueA, valueB,",
    PercentToInt = "percentage, max,",
    PercentTo255 = "percentage,",
    GetTimeOfDay = ",",
    SetTimeOfDay = "whatTime,",
    SetTimeOfDayScalePercentBJ = "scalePercent,",
    GetTimeOfDayScalePercentBJ = ",",
    PlaySound = "soundName,",
    CompareLocationsBJ = "A, B,",
    CompareRectsBJ = "A, B,",
    GetRectFromCircleBJ = "center, radius,",
	GetCurrentCameraSetup = ",",
    CameraSetupApplyForPlayer = "doPan, whichSetup, whichPlayer, duration,",
    CameraSetupApplyForPlayerSmooth = "doPan, whichSetup, whichPlayer, forcedDuration, easeInDuration, easeOutDuration, smoothFactor,",
    CameraSetupGetFieldSwap = "whichField, whichSetup,",
    SetCameraFieldForPlayer = "whichPlayer, whichField, value, duration,",
    SetCameraTargetControllerNoZForPlayer = "whichPlayer, whichUnit, xoffset, yoffset, inheritOrientation,",
    SetCameraPositionForPlayer = "whichPlayer, x, y,",
    SetCameraPositionLocForPlayer = "whichPlayer, loc,",
    RotateCameraAroundLocBJ = "degrees, loc, whichPlayer, duration,",
    PanCameraToForPlayer = "whichPlayer, x, y,",
    PanCameraToLocForPlayer = "whichPlayer, loc,",
    PanCameraToTimedForPlayer = "whichPlayer, x, y, duration,",
    PanCameraToTimedLocForPlayer = "whichPlayer, loc, duration,",
    PanCameraToTimedLocWithZForPlayer = "whichPlayer, loc, zOffset, duration,",
    SmartCameraPanBJ = "whichPlayer, loc, duration,",
    SetCinematicCameraForPlayer = "whichPlayer, cameraModelFile,",
    ResetToGameCameraForPlayer = "whichPlayer, duration,",
    CameraSetSourceNoiseForPlayer = "whichPlayer, magnitude, velocity,",
    CameraSetTargetNoiseForPlayer = "whichPlayer, magnitude, velocity,",
    CameraSetEQNoiseForPlayer = "whichPlayer, magnitude,",
    CameraClearNoiseForPlayer = "whichPlayer,",
    GetCurrentCameraBoundsMapRectBJ = ",",
    GetCameraBoundsMapRect = ",",
    GetPlayableMapRect = ",",
    GetEntireMapRect = ",",
    SetCameraBoundsToRect = "r,",
    SetCameraBoundsToRectForPlayerBJ = "whichPlayer, r,",
    AdjustCameraBoundsBJ = "adjustMethod, dxWest, dxEast, dyNorth, dySouth,",
    AdjustCameraBoundsForPlayerBJ = "adjustMethod, whichPlayer, dxWest, dxEast, dyNorth, dySouth,",
    SetCameraQuickPositionForPlayer = "whichPlayer, x, y,",
    SetCameraQuickPositionLocForPlayer = "whichPlayer, loc,",
    SetCameraQuickPositionLoc = "loc,",
    StopCameraForPlayerBJ = "whichPlayer,",
    SetCameraOrientControllerForPlayerBJ = "whichPlayer, whichUnit, xoffset, yoffset,",
    CameraSetSmoothingFactorBJ = "factor,",
    CameraResetSmoothingFactorBJ = ",",
    DisplayTextToForce = "toForce, message,",
    DisplayTimedTextToForce = "toForce, duration, message,",
    ClearTextMessagesBJ = "toForce,",
    SubStringBJ = "source, start, finish,",
    GetHandleIdBJ = "h,",
    StringHashBJ = "s,",
    TriggerRegisterTimerEventPeriodic = "trig, timeout,",
    TriggerRegisterTimerEventSingle = "trig, timeout,",
    TriggerRegisterTimerExpireEventBJ = "trig, t,",
    TriggerRegisterPlayerUnitEventSimple = "trig, whichPlayer, whichEvent,",
    TriggerRegisterAnyUnitEventBJ = "trig, whichEvent,",
    TriggerRegisterPlayerSelectionEventBJ = "trig, whichPlayer, selected,",
    TriggerRegisterPlayerKeyEventBJ = "trig, whichPlayer, keType, keKey,",
    TriggerRegisterPlayerMouseEventBJ = "trig, whichPlayer, meType,",
    TriggerRegisterPlayerEventVictory = "trig, whichPlayer,",
    TriggerRegisterPlayerEventDefeat = "trig, whichPlayer,",
    TriggerRegisterPlayerEventLeave = "trig, whichPlayer,",
    TriggerRegisterPlayerEventAllianceChanged = "trig, whichPlayer,",
    TriggerRegisterPlayerEventEndCinematic = "trig, whichPlayer,",
    TriggerRegisterGameStateEventTimeOfDay = "trig, opcode, limitval,",
    TriggerRegisterEnterRegionSimple = "trig, whichRegion,",
    TriggerRegisterLeaveRegionSimple = "trig, whichRegion,",
    TriggerRegisterEnterRectSimple = "trig, r,",
    TriggerRegisterLeaveRectSimple = "trig, r,",
    TriggerRegisterDistanceBetweenUnits = "trig, whichUnit, condition, range,",
    TriggerRegisterUnitInRangeSimple = "trig, range, whichUnit,",
    TriggerRegisterUnitLifeEvent = "trig, whichUnit, opcode, limitval,",
    TriggerRegisterUnitManaEvent = "trig, whichUnit, opcode, limitval,",
    TriggerRegisterDialogEventBJ = "trig, whichDialog,",
    TriggerRegisterShowSkillEventBJ = "trig,",
    TriggerRegisterBuildSubmenuEventBJ = "trig,",
    TriggerRegisterBuildCommandEventBJ = "trig, unitId,",
    TriggerRegisterTrainCommandEventBJ = "trig, unitId,",
    TriggerRegisterUpgradeCommandEventBJ = "trig, techId,",
    TriggerRegisterCommonCommandEventBJ = "trig, order,",
    TriggerRegisterGameLoadedEventBJ = "trig,",
    TriggerRegisterGameSavedEventBJ = "trig,",
    RegisterDestDeathInRegionEnum = ",",
    TriggerRegisterDestDeathInRegionEvent = "trig, r,",
    AddWeatherEffectSaveLast = "where, effectID,",
    GetLastCreatedWeatherEffect = ",",
    RemoveWeatherEffectBJ = "weatherwhichWeatherEffect,",
    TerrainDeformationCraterBJ = "duration, permanent, where, radius, depth,",
    TerrainDeformationRippleBJ = "duration, limitNeg, where, startRadius, endRadius, depth, wavePeriod, waveWidth,",
    TerrainDeformationWaveBJ = "duration, source, target, radius, depth, trailDelay,",
    TerrainDeformationRandomBJ = "duration, where, radius, minDelta, maxDelta, updateInterval,",
    TerrainDeformationStopBJ = "deformation, duration,",
    GetLastCreatedTerrainDeformation = ",",
    AddLightningLoc = "codeName, where1, where2,",
    DestroyLightningBJ = "whichBolt,",
    MoveLightningLoc = "whichBolt, where1, where2,",
    GetLightningColorABJ = "whichBolt,",
    GetLightningColorRBJ = "whichBolt,",
    GetLightningColorGBJ = "whichBolt,",
    GetLightningColorBBJ = "whichBolt,",
    SetLightningColorBJ = "whichBolt, r, g, b, a,",
    GetLastCreatedLightningBJ = ",",
    GetAbilityEffectBJ = "abilcode, t, index,",
    GetAbilitySoundBJ = "abilcode, t,",
    GetTerrainCliffLevelBJ = "where,",
    GetTerrainTypeBJ = "where,",
    GetTerrainVarianceBJ = "where,",
    SetTerrainTypeBJ = "where, terrainType, variation, area, shape,",
    IsTerrainPathableBJ = "where, t,",
    SetTerrainPathableBJ = "where, t, flag,",
    SetWaterBaseColorBJ = "red, green, blue, transparency,",
    CreateFogModifierRectSimple = "whichPlayer, whichFogState, r, afterUnits,",
    CreateFogModifierRadiusLocSimple = "whichPlayer, whichFogState, center, radius, afterUnits,",
    CreateFogModifierRectBJ = "enabled, whichPlayer, whichFogState, r,",
    CreateFogModifierRadiusLocBJ = "enabled, whichPlayer, whichFogState, center, radius,",
    GetLastCreatedFogModifier = ",",
    FogEnableOn = ",",
    FogEnableOff = ",",
    FogMaskEnableOn = ",",
    FogMaskEnableOff = ",",
    UseTimeOfDayBJ = "flag,",
    SetTerrainFogExBJ = "style, zstart, zend, density, red, green, blue,",
    ResetTerrainFogBJ = ",",
    SetDoodadAnimationBJ = "animName, doodadID, radius, center,",
    SetDoodadAnimationRectBJ = "animName, doodadID, r,",
    AddUnitAnimationPropertiesBJ = "add, animProperties, whichUnit,",
    CreateImageBJ = "file, size, where, zOffset, imageType,",
    ShowImageBJ = "flag, whichImage,",
    SetImagePositionBJ = "whichImage, where, zOffset,",
    SetImageColorBJ = "whichImage, red, green, blue, alpha,",
    GetLastCreatedImage = ",",
    CreateUbersplatBJ = "where, name, red, green, blue, alpha, forcePaused, noBirthTime,",
    ShowUbersplatBJ = "flag, whichSplat,",
    GetLastCreatedUbersplat = ",",
    GetLastCreatedMinimapIcon = ",",
    CreateMinimapIconOnUnitBJ = "whichUnit, red, green, blue, pingPath, fogVisibility,",
    CreateMinimapIconAtLocBJ = "where, red, green, blue, pingPath, fogVisibility,",
    CreateMinimapIconBJ = "x, y, red, green, blue, pingPath, fogVisibility,",
    CampaignMinimapIconUnitBJ = "whichUnit, style,",
    CampaignMinimapIconLocBJ = "where, style,",
	PlaySoundBJ = "soundHandle,",
    StopSoundBJ = "soundHandle, fadeOut,",
    SetSoundVolumeBJ = "soundHandle, volumePercent,",
    SetSoundOffsetBJ = "newOffset, soundHandle,",
    SetSoundDistanceCutoffBJ = "soundHandle, cutoff,",
    SetSoundPitchBJ = "soundHandle, pitch,",
    SetSoundPositionLocBJ = "soundHandle, loc, z,",
    AttachSoundToUnitBJ = "soundHandle, whichUnit,",
    SetSoundConeAnglesBJ = "soundHandle, inside, outside, outsideVolumePercent,",
    KillSoundWhenDoneBJ = "soundHandle,",
    PlaySoundAtPointBJ = "soundHandle, volumePercent, loc, z,",
    PlaySoundOnUnitBJ = "soundHandle, volumePercent, whichUnit,",
    PlaySoundFromOffsetBJ = "soundHandle, volumePercent, startingOffset,",
    PlayMusicBJ = "musicFileName,",
    PlayMusicExBJ = "musicFileName, startingOffset, fadeInTime,",
    SetMusicOffsetBJ = "newOffset,",
    PlayThematicMusicBJ = "musicName,",
    PlayThematicMusicExBJ = "musicName, startingOffset,",
    SetThematicMusicOffsetBJ = "newOffset,",
    EndThematicMusicBJ = ",",
    StopMusicBJ = "fadeOut,",
    ResumeMusicBJ = ",",
    SetMusicVolumeBJ = "volumePercent,",
    GetSoundDurationBJ = "soundHandle,",
    GetSoundFileDurationBJ = "musicFileName,",
    GetLastPlayedSound = ",",
    GetLastPlayedMusic = ",",
    VolumeGroupSetVolumeBJ = "vgroup, percent,",
    SetCineModeVolumeGroupsImmediateBJ = ",",
    SetCineModeVolumeGroupsBJ = ",",
    SetSpeechVolumeGroupsImmediateBJ = ",",
    SetSpeechVolumeGroupsBJ = ",",
    VolumeGroupResetImmediateBJ = ",",
    VolumeGroupResetBJ = ",",
    GetSoundIsPlayingBJ = "soundHandle,",
    WaitForSoundBJ = "soundHandle, offset,",
    SetMapMusicIndexedBJ = "musicName, index,",
    SetMapMusicRandomBJ = "musicName,",
    ClearMapMusicBJ = ",",
    SetStackedSoundBJ = "add, soundHandle, r,",
    StartSoundForPlayerBJ = "whichPlayer, soundHandle,",
    VolumeGroupSetVolumeForPlayerBJ = "whichPlayer, vgroup, scale,",
    EnableDawnDusk = "flag,",
    IsDawnDuskEnabled = ",",
    SetAmbientDaySound = "inLabel,",
    SetAmbientNightSound = "inLabel,",
    AddSpecialEffectLocBJ = "where, modelName,",
    AddSpecialEffectTargetUnitBJ = "attachPointName, targetWidget, modelName,",
    DestroyEffectBJ = "whichEffect,",
    GetLastCreatedEffectBJ = ",",
    CreateCommandButtonEffectBJ = "abilityId, order,",
    CreateTrainCommandButtonEffectBJ = "unitId,",
    CreateUpgradeCommandButtonEffectBJ = "techId,",
    CreateCommonCommandButtonEffectBJ = "order,",
    CreateLearnCommandButtonEffectBJ = "abilityId,",
    CreateBuildCommandButtonEffectBJ = "unitId,",
    GetLastCreatedCommandButtonEffectBJ = ",",
    GetItemLoc = "whichItem,",
    GetItemLifeBJ = "whichWidget,",
    SetItemLifeBJ = "whichWidget, life,",
    AddHeroXPSwapped = "xpToAdd, whichHero, showEyeCandy,",
    SetHeroLevelBJ = "whichHero, newLevel, showEyeCandy,",
    DecUnitAbilityLevelSwapped = "abilcode, whichUnit,",
    IncUnitAbilityLevelSwapped = "abilcode, whichUnit,",
    SetUnitAbilityLevelSwapped = "abilcode, whichUnit, level,",
    GetUnitAbilityLevelSwapped = "abilcode, whichUnit,",
    UnitHasBuffBJ = "whichUnit, buffcode,",
    UnitRemoveBuffBJ = "buffcode, whichUnit,",
    UnitAddItemSwapped = "whichItem, whichHero,",
    UnitAddItemByIdSwapped = "itemId, whichHero,",
    UnitRemoveItemSwapped = "whichItem, whichHero,",
    UnitRemoveItemFromSlotSwapped = "itemSlot, whichHero,",
    CreateItemLoc = "itemId, loc,",
    GetLastCreatedItem = ",",
    GetLastRemovedItem = ",",
    SetItemPositionLoc = "whichItem, loc,",
    GetLearnedSkillBJ = ",",
    SuspendHeroXPBJ = "flag, whichHero,",
    SetPlayerHandicapDamageBJ = "whichPlayer, handicapPercent,",
    GetPlayerHandicapDamageBJ = "whichPlayer,",
    SetPlayerHandicapReviveTimeBJ = "whichPlayer, handicapPercent,",
    GetPlayerHandicapReviveTimeBJ = "whichPlayer,",
    SetPlayerHandicapXPBJ = "whichPlayer, handicapPercent,",
    GetPlayerHandicapXPBJ = "whichPlayer,",
    SetPlayerHandicapBJ = "whichPlayer, handicapPercent,",
    GetPlayerHandicapBJ = "whichPlayer,",
    GetHeroStatBJ = "whichStat, whichHero, includeBonuses,",
    SetHeroStat = "whichHero, whichStat, value,",
    ModifyHeroStat = "whichStat, whichHero, modifyMethod, value,",
    ModifyHeroSkillPoints = "whichHero, modifyMethod, value,",
    UnitDropItemPointBJ = "whichUnit, whichItem, x, y,",
    UnitDropItemPointLoc = "whichUnit, whichItem, loc,",
    UnitDropItemSlotBJ = "whichUnit, whichItem, slot,",
    UnitDropItemTargetBJ = "whichUnit, whichItem, target,",
    UnitUseItemDestructable = "whichUnit, whichItem, target,",
    UnitUseItemPointLoc = "whichUnit, whichItem, loc,",
    UnitItemInSlotBJ = "whichUnit, itemSlot,",
    GetInventoryIndexOfItemTypeBJ = "whichUnit, itemId,",
    GetItemOfTypeFromUnitBJ = "whichUnit, itemId,",
    UnitHasItemOfTypeBJ = "whichUnit, itemId,",
    UnitInventoryCount = "whichUnit,",
    UnitInventorySizeBJ = "whichUnit,",
    SetItemInvulnerableBJ = "whichItem, flag,",
    SetItemDropOnDeathBJ = "whichItem, flag,",
    SetItemDroppableBJ = "whichItem, flag,",
    SetItemPlayerBJ = "whichItem, whichPlayer, changeColor,",
    SetItemVisibleBJ = "show, whichItem,",
    IsItemHiddenBJ = "whichItem,",
    ChooseRandomItemBJ = "level,",
    ChooseRandomItemExBJ = "level, whichType,",
    ChooseRandomNPBuildingBJ = ",",
    ChooseRandomCreepBJ = "level,",
    EnumItemsInRectBJ = "r, actionFunc,",
    RandomItemInRectBJEnum = ",",
    RandomItemInRectBJ = "r, filter,",
    RandomItemInRectSimpleBJ = "r,",
    CheckItemStatus = "whichItem, status,",
    CheckItemcodeStatus = "itemId, status,",
    UnitId2OrderIdBJ = "unitId,",
    String2UnitIdBJ = "unitIdString,",
    UnitId2StringBJ = "unitId,",
    String2OrderIdBJ = "orderIdString,",
    OrderId2StringBJ = "orderId,",
    GetIssuedOrderIdBJ = ",",
    GetKillingUnitBJ = ",",
    CreateUnitAtLocSaveLast = "id, unitid, loc, face,",
    GetLastCreatedUnit = ",",
    CreateNUnitsAtLoc = "count, unitId, whichPlayer, loc, face,",
    CreateNUnitsAtLocFacingLocBJ = "count, unitId, whichPlayer, loc, lookAt,",
    GetLastCreatedGroupEnum = ",",
    GetLastCreatedGroup = ",",
    CreateCorpseLocBJ = "unitid, whichPlayer, loc,",
    UnitSuspendDecayBJ = "suspend, whichUnit,",
    DelayedSuspendDecayStopAnimEnum = ",",
    DelayedSuspendDecayBoneEnum = ",",
    DelayedSuspendDecayFleshEnum = ",",
    DelayedSuspendDecay = ",",
    DelayedSuspendDecayCreate = ",",
    CreatePermanentCorpseLocBJ = "style, unitid, whichPlayer, loc, facing,",
    GetUnitStateSwap = "whichState, whichUnit,",
    GetUnitStatePercent = "whichUnit, whichState, whichMaxState,",
    GetUnitLifePercent = "whichUnit,",
    GetUnitManaPercent = "whichUnit,",
    SelectUnitSingle = "whichUnit,",
    SelectGroupBJEnum = ",",
    SelectGroupBJ = "g,",
    SelectUnitAdd = "whichUnit,",
    SelectUnitRemove = "whichUnit,",
    ClearSelectionForPlayer = "whichPlayer,",
    SelectUnitForPlayerSingle = "whichUnit, whichPlayer,",
    SelectGroupForPlayerBJ = "g, whichPlayer,",
    SelectUnitAddForPlayer = "whichUnit, whichPlayer,",
    SelectUnitRemoveForPlayer = "whichUnit, whichPlayer,",
    SetUnitLifeBJ = "whichUnit, newValue,",
    SetUnitManaBJ = "whichUnit, newValue,",
    SetUnitLifePercentBJ = "whichUnit, percent,",
    SetUnitManaPercentBJ = "whichUnit, percent,",
    IsUnitDeadBJ = "whichUnit,",
    IsUnitAliveBJ = "whichUnit,",
    IsUnitGroupDeadBJEnum = ",",
    IsUnitGroupDeadBJ = "g,",
    IsUnitGroupEmptyBJEnum = ",",
    IsUnitGroupEmptyBJ = "g,",
    IsUnitGroupInRectBJEnum = ",",
    IsUnitGroupInRectBJ = "g, r,",
    IsUnitHiddenBJ = "whichUnit,",
    ShowUnitHide = "whichUnit,",
    ShowUnitShow = "whichUnit,",
    IssueHauntOrderAtLocBJFilter = ",",
    IssueHauntOrderAtLocBJ = "whichPeon, loc,",
    IssueBuildOrderByIdLocBJ = "whichPeon, unitId, loc,",
    IssueTrainOrderByIdBJ = "whichUnit, unitId,",
    GroupTrainOrderByIdBJ = "g, unitId,",
    IssueUpgradeOrderByIdBJ = "whichUnit, techId,",
    GetAttackedUnitBJ = ",",
    SetUnitFlyHeightBJ = "whichUnit, newHeight, rate,",
    SetUnitTurnSpeedBJ = "whichUnit, turnSpeed,",
    SetUnitPropWindowBJ = "whichUnit, propWindow,",
    GetUnitPropWindowBJ = "whichUnit,",
    GetUnitDefaultPropWindowBJ = "whichUnit,",
    SetUnitBlendTimeBJ = "whichUnit, blendTime,",
    SetUnitAcquireRangeBJ = "whichUnit, acquireRange,",
    UnitSetCanSleepBJ = "whichUnit, canSleep,",
    UnitCanSleepBJ = "whichUnit,",
    UnitWakeUpBJ = "whichUnit,",
    UnitIsSleepingBJ = "whichUnit,",
    WakePlayerUnitsEnum = ",",
    WakePlayerUnits = "whichPlayer,",
    EnableCreepSleepBJ = "enable,",
    UnitGenerateAlarms = "whichUnit, generate,",
    DoesUnitGenerateAlarms = "whichUnit,",
    PauseAllUnitsBJEnum = ",",
    PauseAllUnitsBJ = "pause,",
    PauseUnitBJ = "pause, whichUnit,",
    IsUnitPausedBJ = "whichUnit,",
    UnitPauseTimedLifeBJ = "flag, whichUnit,",
    UnitApplyTimedLifeBJ = "duration, buffId, whichUnit,",
    UnitShareVisionBJ = "share, whichUnit, whichPlayer,",
    UnitRemoveBuffsBJ = "buffType, whichUnit,",
    UnitRemoveBuffsExBJ = "polarity, resist, whichUnit, bTLife, bAura,",
    UnitCountBuffsExBJ = "polarity, resist, whichUnit, bTLife, bAura,",
    UnitRemoveAbilityBJ = "abilityId, whichUnit,",
    UnitAddAbilityBJ = "abilityId, whichUnit,",
    UnitRemoveTypeBJ = "whichType, whichUnit,",
    UnitAddTypeBJ = "whichType, whichUnit,",
    UnitMakeAbilityPermanentBJ = "permanent, abilityId, whichUnit,",
    SetUnitExplodedBJ = "whichUnit, exploded,",
    ExplodeUnitBJ = "whichUnit,",
    GetTransportUnitBJ = ",",
    GetLoadedUnitBJ = ",",
    IsUnitInTransportBJ = "whichUnit, whichTransport,",
    IsUnitLoadedBJ = "whichUnit,",
    IsUnitIllusionBJ = "whichUnit,",
    ReplaceUnitBJ = "whichUnit, newUnitId, unitStateMethod,",
    GetLastReplacedUnitBJ = ",",
    SetUnitPositionLocFacingBJ = "whichUnit, loc, facing,",
    SetUnitPositionLocFacingLocBJ = "whichUnit, loc, lookAt,",
    AddItemToStockBJ = "itemId, whichUnit, currentStock, stockMax,",
    AddUnitToStockBJ = "unitId, whichUnit, currentStock, stockMax,",
    RemoveItemFromStockBJ = "itemId, whichUnit,",
    RemoveUnitFromStockBJ = "unitId, whichUnit,",
    SetUnitUseFoodBJ = "enable, whichUnit,",
    UnitDamagePointLoc = "whichUnit, delay, radius, loc, amount, whichAttack, whichDamage,",
    UnitDamageTargetBJ = "whichUnit, target, amount, whichAttack, whichDamage,",
    CreateDestructableLoc = "objectid, loc, facing, scale, variation,",
    CreateDeadDestructableLocBJ = "objectid, loc, facing, scale, variation,",
    GetLastCreatedDestructable = ",",
    ShowDestructableBJ = "flag, d,",
    SetDestructableInvulnerableBJ = "d, flag,",
    IsDestructableInvulnerableBJ = "d,",
    GetDestructableLoc = "whichDestructable,",
    EnumDestructablesInRectAll = "r, actionFunc,",
    EnumDestructablesInCircleBJFilter = ",",
    IsDestructableDeadBJ = "d,",
    IsDestructableAliveBJ = "d,",
    RandomDestructableInRectBJEnum = ",",
    RandomDestructableInRectBJ = "r, filter,",
    RandomDestructableInRectSimpleBJ = "r,",
    EnumDestructablesInCircleBJ = "radius, loc, actionFunc,",
    SetDestructableLifePercentBJ = "d, percent,",
    SetDestructableMaxLifeBJ = "d, max,",
    ModifyGateBJ = "gateOperation, d,",
    GetElevatorHeight = "d,",
    ChangeElevatorHeight = "d, newHeight,",
    NudgeUnitsInRectEnum = ",",
    NudgeItemsInRectEnum = ",",
    NudgeObjectsInRect = "nudgeArea,",
    NearbyElevatorExistsEnum = ",",
    NearbyElevatorExists = "x, y,",
    FindElevatorWallBlockerEnum = ",",
    ChangeElevatorWallBlocker = "x, y, facing, open,",
    ChangeElevatorWalls = "open, walls, d,",
    WaygateActivateBJ = "activate, waygate,",
    WaygateIsActiveBJ = "waygate,",
    WaygateSetDestinationLocBJ = "waygate, loc,",
    WaygateGetDestinationLocBJ = "waygate,",
    UnitSetUsesAltIconBJ = "flag, whichUnit,",
    ForceUIKeyBJ = "whichPlayer, key,",
    ForceUICancelBJ = "whichPlayer,",
    ForGroupBJ = "whichGroup, callback,",
    GroupAddUnitSimple = "whichUnit, whichGroup,",
    GroupRemoveUnitSimple = "whichUnit, whichGroup,",
    GroupAddGroupEnum = ",",
    GroupAddGroup = "sourceGroup, destGroup,",
    GroupRemoveGroupEnum = ",",
    GroupRemoveGroup = "sourceGroup, destGroup,",
    ForceAddPlayerSimple = "whichPlayer, whichForce,",
    ForceRemovePlayerSimple = "whichPlayer, whichForce,",
    GroupPickRandomUnitEnum = ",",
    GroupPickRandomUnit = "whichGroup,",
    ForcePickRandomPlayerEnum = ",",
    ForcePickRandomPlayer = "whichForce,",
    EnumUnitsSelected = "whichPlayer, enumFilter, enumAction,",
    GetUnitsInRectMatching = "r, filter,",
    GetUnitsInRectAll = "r,",
    GetUnitsInRectOfPlayerFilter = ",",
    GetUnitsInRectOfPlayer = "r, whichPlayer,",
    GetUnitsInRangeOfLocMatching = "radius, whichLocation, filter,",
    GetUnitsInRangeOfLocAll = "radius, whichLocation,",
    GetUnitsOfTypeIdAllFilter = ",",
    GetUnitsOfTypeIdAll = "unitid,",
    GetUnitsOfPlayerMatching = "whichPlayer, filter,",
    GetUnitsOfPlayerAll = "whichPlayer,",
    GetUnitsOfPlayerAndTypeIdFilter = ",",
    GetUnitsOfPlayerAndTypeId = "whichPlayer, unitid,",
    GetUnitsSelectedAll = "whichPlayer,",
    GetForceOfPlayer = "whichPlayer,",
    GetPlayersAll = ",",
    GetPlayersByMapControl = "whichControl,",
    GetPlayersAllies = "whichPlayer,",
    GetPlayersEnemies = "whichPlayer,",
    GetPlayersMatching = "filter,",
    CountUnitsInGroupEnum = ",",
    CountUnitsInGroup = "g,",
    CountPlayersInForceEnum = ",",
    CountPlayersInForceBJ = "f,",
    GetRandomSubGroupEnum = ",",
    GetRandomSubGroup = "count, sourceGroup,",
    LivingPlayerUnitsOfTypeIdFilter = ",",
    CountLivingPlayerUnitsOfTypeId = "unitId, whichPlayer,",
    ResetUnitAnimation = "whichUnit,",
    SetUnitTimeScalePercent = "whichUnit, percentScale,",
    SetUnitScalePercent = "whichUnit, percentScaleX, percentScaleY, percentScaleZ,",
    SetUnitVertexColorBJ = "whichUnit, red, green, blue, transparency,",
    UnitAddIndicatorBJ = "whichUnit, red, green, blue, transparency,",
    DestructableAddIndicatorBJ = "whichDestructable, red, green, blue, transparency,",
    ItemAddIndicatorBJ = "whichItem, red, green, blue, transparency,",
    SetUnitFacingToFaceLocTimed = "whichUnit, target, duration,",
    SetUnitFacingToFaceUnitTimed = "whichUnit, target, duration,",
    QueueUnitAnimationBJ = "whichUnit, whichAnimation,",
    SetDestructableAnimationBJ = "d, whichAnimation,",
    QueueDestructableAnimationBJ = "d, whichAnimation,",
    SetDestAnimationSpeedPercent = "d, percentScale,",
    DialogDisplayBJ = "flag, whichDialog, whichPlayer,",
    DialogSetMessageBJ = "whichDialog, message,",
    DialogAddButtonBJ = "whichDialog, buttonText,",
    DialogAddButtonWithHotkeyBJ = "whichDialog, buttonText, hotkey,",
    DialogClearBJ = "whichDialog,",
    GetLastCreatedButtonBJ = ",",
    GetClickedButtonBJ = ",",
    GetClickedDialogBJ = ",",
    SetPlayerAllianceBJ = "sourcePlayer, whichAllianceSetting, value, otherPlayer,",
    SetPlayerAllianceStateAllyBJ = "sourcePlayer, otherPlayer, flag,",
    SetPlayerAllianceStateVisionBJ = "sourcePlayer, otherPlayer, flag,",
    SetPlayerAllianceStateControlBJ = "sourcePlayer, otherPlayer, flag,",
    SetPlayerAllianceStateFullControlBJ = "sourcePlayer, otherPlayer, flag,",
    SetPlayerAllianceStateBJ = "sourcePlayer, otherPlayer, allianceState,",
    SetForceAllianceStateBJ = "sourceForce, targetForce, allianceState,",
    PlayersAreCoAllied = "playerA, playerB,",
    ShareEverythingWithTeamAI = "whichPlayer,",
    ShareEverythingWithTeam = "whichPlayer,",
    ConfigureNeutralVictim = ",",
    MakeUnitsPassiveForPlayerEnum = ",",
    MakeUnitsPassiveForPlayer = "whichPlayer,",
    MakeUnitsPassiveForTeam = "whichPlayer,",
    AllowVictoryDefeat = "gameResult,",
    EndGameBJ = ",",
    MeleeVictoryDialogBJ = "whichPlayer, leftGame,",
    MeleeDefeatDialogBJ = "whichPlayer, leftGame,",
    GameOverDialogBJ = "whichPlayer, leftGame,",
    RemovePlayerPreserveUnitsBJ = "whichPlayer, gameResult, leftGame,",
    CustomVictoryOkBJ = ",",
    CustomVictoryQuitBJ = ",",
    CustomVictoryDialogBJ = "whichPlayer,",
    CustomVictorySkipBJ = "whichPlayer,",
    CustomVictoryBJ = "whichPlayer, showDialog, showScores,",
    CustomDefeatRestartBJ = ",",
    CustomDefeatReduceDifficultyBJ = ",",
    CustomDefeatLoadBJ = ",",
    CustomDefeatQuitBJ = ",",
    CustomDefeatDialogBJ = "whichPlayer, message,",
    CustomDefeatBJ = "whichPlayer, message,",
    SetNextLevelBJ = "nextLevel,",
    SetPlayerOnScoreScreenBJ = "flag, whichPlayer,",
    CreateQuestBJ = "questType, title, description, iconPath,",
    DestroyQuestBJ = "whichQuest,",
    QuestSetEnabledBJ = "enabled, whichQuest,",
    QuestSetTitleBJ = "whichQuest, title,",
    QuestSetDescriptionBJ = "whichQuest, description,",
    QuestSetCompletedBJ = "whichQuest, completed,",
    QuestSetFailedBJ = "whichQuest, failed,",
    QuestSetDiscoveredBJ = "whichQuest, discovered,",
    GetLastCreatedQuestBJ = ",",
    CreateQuestItemBJ = "whichQuest, description,",
    QuestItemSetDescriptionBJ = "questwhichQuestItem, description,",
    QuestItemSetCompletedBJ = "questwhichQuestItem, completed,",
    GetLastCreatedQuestItemBJ = ",",
    CreateDefeatConditionBJ = "description,",
    DestroyDefeatConditionBJ = "whichCondition,",
    DefeatConditionSetDescriptionBJ = "whichCondition, description,",
    GetLastCreatedDefeatConditionBJ = ",",
    FlashQuestDialogButtonBJ = ",",
    QuestMessageBJ = "f, messageType, message,",
    StartTimerBJ = "t, periodic, timeout,",
    CreateTimerBJ = "periodic, timeout,",
    DestroyTimerBJ = "whichTimer,",
    PauseTimerBJ = "pause, whichTimer,",
    GetLastCreatedTimerBJ = ",",
    CreateTimerDialogBJ = "t, title,",
    DestroyTimerDialogBJ = "timertd,",
    TimerDialogSetTitleBJ = "timertd, title,",
    TimerDialogSetTitleColorBJ = "timertd, red, green, blue, transparency,",
    TimerDialogSetTimeColorBJ = "timertd, red, green, blue, transparency,",
    TimerDialogSetSpeedBJ = "timertd, speedMultFactor,",
    TimerDialogDisplayForPlayerBJ = "show, timertd, whichPlayer,",
    TimerDialogDisplayBJ = "show, timertd,",
    GetLastCreatedTimerDialogBJ = ",",
    LeaderboardResizeBJ = "lb,",
    LeaderboardSetPlayerItemValueBJ = "whichPlayer, lb, val,",
    LeaderboardSetPlayerItemLabelBJ = "whichPlayer, lb, val,",
    LeaderboardSetPlayerItemStyleBJ = "whichPlayer, lb, showLabel, showValue, showIcon,",
    LeaderboardSetPlayerItemLabelColorBJ = "whichPlayer, lb, red, green, blue, transparency,",
    LeaderboardSetPlayerItemValueColorBJ = "whichPlayer, lb, red, green, blue, transparency,",
    LeaderboardSetLabelColorBJ = "lb, red, green, blue, transparency,",
    LeaderboardSetValueColorBJ = "lb, red, green, blue, transparency,",
    LeaderboardSetLabelBJ = "lb, label,",
    LeaderboardSetStyleBJ = "lb, showLabel, showNames, showValues, showIcon,",
    LeaderboardGetItemCountBJ = "lb,",
    LeaderboardHasPlayerItemBJ = "lb, whichPlayer,",
    ForceSetLeaderboardBJ = "lb, toForce,",
    CreateLeaderboardBJ = "toForce, label,",
    DestroyLeaderboardBJ = "lb,",
    LeaderboardDisplayBJ = "show, lb,",
    LeaderboardAddItemBJ = "whichPlayer, lb, label, value,",
    LeaderboardRemovePlayerItemBJ = "whichPlayer, lb,",
    LeaderboardSortItemsBJ = "lb, sortType, ascending,",
    LeaderboardSortItemsByPlayerBJ = "lb, ascending,",
    LeaderboardSortItemsByLabelBJ = "lb, ascending,",
    LeaderboardGetPlayerIndexBJ = "whichPlayer, lb,",
    LeaderboardGetIndexedPlayerBJ = "position, lb,",
    PlayerGetLeaderboardBJ = "whichPlayer,",
    GetLastCreatedLeaderboard = ",",
    CreateMultiboardBJ = "cols, rows, title,",
    DestroyMultiboardBJ = "mb,",
    GetLastCreatedMultiboard = ",",
    MultiboardDisplayBJ = "show, mb,",
    MultiboardMinimizeBJ = "minimize, mb,",
    MultiboardSetTitleTextColorBJ = "mb, red, green, blue, transparency,",
    MultiboardAllowDisplayBJ = "flag,",
    MultiboardSetItemStyleBJ = "mb, col, row, showValue, showIcon,",
    MultiboardSetItemValueBJ = "mb, col, row, val,",
    MultiboardSetItemColorBJ = "mb, col, row, red, green, blue, transparency,",
    MultiboardSetItemWidthBJ = "mb, col, row, width,",
    MultiboardSetItemIconBJ = "mb, col, row, iconFileName,",
    TextTagSize2Height = "size,",
    TextTagSpeed2Velocity = "speed,",
    SetTextTagColorBJ = "tt, red, green, blue, transparency,",
    SetTextTagVelocityBJ = "tt, speed, angle,",
    SetTextTagTextBJ = "tt, s, size,",
    SetTextTagPosBJ = "tt, loc, zOffset,",
    SetTextTagPosUnitBJ = "tt, whichUnit, zOffset,",
    SetTextTagSuspendedBJ = "tt, flag,",
    SetTextTagPermanentBJ = "tt, flag,",
    SetTextTagAgeBJ = "tt, age,",
    SetTextTagLifespanBJ = "tt, lifespan,",
    SetTextTagFadepointBJ = "tt, fadepoint,",
    CreateTextTagLocBJ = "s, loc, zOffset, size, red, green, blue, transparency,",
    CreateTextTagUnitBJ = "s, whichUnit, zOffset, size, red, green, blue, transparency,",
    DestroyTextTagBJ = "tt,",
    ShowTextTagForceBJ = "show, tt, whichForce,",
    GetLastCreatedTextTag = ",",
    PauseGameOn = ",",
    PauseGameOff = ",",
    SetUserControlForceOn = "whichForce,",
    SetUserControlForceOff = "whichForce,",
    ShowInterfaceForceOn = "whichForce, fadeDuration,",
    ShowInterfaceForceOff = "whichForce, fadeDuration,",
    PingMinimapForForce = "whichForce, x, y, duration,",
    PingMinimapLocForForce = "whichForce, loc, duration,",
    PingMinimapForPlayer = "whichPlayer, x, y, duration,",
    PingMinimapLocForPlayer = "whichPlayer, loc, duration,",
    PingMinimapForForceEx = "whichForce, x, y, duration, style, red, green, blue,",
    PingMinimapLocForForceEx = "whichForce, loc, duration, style, red, green, blue,",
    EnableWorldFogBoundaryBJ = "enable, f,",
    EnableOcclusionBJ = "enable, f,",
    CancelCineSceneBJ = ",",
    TryInitCinematicBehaviorBJ = ",",
    SetCinematicSceneBJ = "soundHandle, portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration,",
    GetTransmissionDuration = "soundHandle, timeType, timeVal,",
    WaitTransmissionDuration = "soundHandle, timeType, timeVal,",
    DoTransmissionBasicsXYBJ = "unitId, color, x, y, soundHandle, unitName, message, duration,",
    TransmissionFromUnitWithNameBJ = "toForce, whichUnit, unitName, soundHandle, message, timeType, timeVal, wait,",
    PlayDialogueFromSpeakerEx = "toForce, speaker, speakerType, soundHandle, timeType, timeVal, wait,",
    PlayDialogueFromSpeakerTypeEx = "toForce, fromPlayer, speakerType, loc, soundHandle, timeType, timeVal, wait,",
    TransmissionFromUnitTypeWithNameBJ = "toForce, fromPlayer, unitId, unitName, loc, soundHandle, message, timeType, timeVal, wait,",
    GetLastTransmissionDurationBJ = ",",
    ForceCinematicSubtitlesBJ = "flag,",
    CinematicModeExBJ = "cineMode, forForce, interfaceFadeTime,",
    CinematicModeBJ = "cineMode, forForce,",
    DisplayCineFilterBJ = "flag,",
    CinematicFadeCommonBJ = "red, green, blue, duration, tex, startTrans, endTrans,",
    FinishCinematicFadeBJ = ",",
    FinishCinematicFadeAfterBJ = "duration,",
    ContinueCinematicFadeBJ = ",",
    ContinueCinematicFadeAfterBJ = "duration, red, green, blue, trans, tex,",
    AbortCinematicFadeBJ = ",",
    CinematicFadeBJ = "fadetype, duration, tex, red, green, blue, trans,",
    CinematicFilterGenericBJ = "duration, bmode, tex, red0, green0, blue0, trans0, red1, green1, blue1, trans1,",
    RescueUnitBJ = "whichUnit, rescuer, changeColor,",
    TriggerActionUnitRescuedBJ = ",",
    TryInitRescuableTriggersBJ = ",",
    SetRescueUnitColorChangeBJ = "changeColor,",
    SetRescueBuildingColorChangeBJ = "changeColor,",
    MakeUnitRescuableToForceBJEnum = ",",
    MakeUnitRescuableToForceBJ = "whichUnit, isRescuable, whichForce,",
    InitRescuableBehaviorBJ = ",",
    SetPlayerTechResearchedSwap = "techid, levels, whichPlayer,",
    SetPlayerTechMaxAllowedSwap = "techid, maximum, whichPlayer,",
    SetPlayerMaxHeroesAllowed = "maximum, whichPlayer,",
    GetPlayerTechCountSimple = "techid, whichPlayer,",
    GetPlayerTechMaxAllowedSwap = "techid, whichPlayer,",
    SetPlayerAbilityAvailableBJ = "avail, abilid, whichPlayer,",
    SetCampaignMenuRaceBJ = "campaignNumber,",
    SetMissionAvailableBJ = "available, missionIndex,",
    SetCampaignAvailableBJ = "available, campaignNumber,",
    SetCinematicAvailableBJ = "available, cinematicIndex,",
    InitGameCacheBJ = "campaignFile,",
    SaveGameCacheBJ = "cache,",
    GetLastCreatedGameCacheBJ = ",",
    InitHashtableBJ = ",",
    GetLastCreatedHashtableBJ = ",",
    StoreRealBJ = "value, key, missionKey, cache,",
    StoreIntegerBJ = "value, key, missionKey, cache,",
    StoreBooleanBJ = "value, key, missionKey, cache,",
    StoreStringBJ = "value, key, missionKey, cache,",
    StoreUnitBJ = "whichUnit, key, missionKey, cache,",
    SaveRealBJ = "value, key, missionKey, table,",
    SaveIntegerBJ = "value, key, missionKey, table,",
    SaveBooleanBJ = "value, key, missionKey, table,",
    SaveStringBJ = "value, key, missionKey, table,",
    SavePlayerHandleBJ = "whichPlayer, key, missionKey, table,",
    SaveWidgetHandleBJ = "whichWidget, key, missionKey, table,",
    SaveDestructableHandleBJ = "whichDestructable, key, missionKey, table,",
    SaveItemHandleBJ = "whichItem, key, missionKey, table,",
    SaveUnitHandleBJ = "whichUnit, key, missionKey, table,",
    SaveAbilityHandleBJ = "whichAbility, key, missionKey, table,",
    SaveTimerHandleBJ = "whichTimer, key, missionKey, table,",
    SaveTriggerHandleBJ = "whichTrigger, key, missionKey, table,",
    SaveTriggerConditionHandleBJ = "whichTriggercondition, key, missionKey, table,",
    SaveTriggerActionHandleBJ = "whichTriggeraction, key, missionKey, table,",
    SaveTriggerEventHandleBJ = "whichEvent, key, missionKey, table,",
    SaveForceHandleBJ = "whichForce, key, missionKey, table,",
    SaveGroupHandleBJ = "whichGroup, key, missionKey, table,",
    SaveLocationHandleBJ = "whichLocation, key, missionKey, table,",
    SaveRectHandleBJ = "whichRect, key, missionKey, table,",
    SaveBooleanExprHandleBJ = "whichBoolexpr, key, missionKey, table,",
    SaveSoundHandleBJ = "whichSound, key, missionKey, table,",
    SaveEffectHandleBJ = "whichEffect, key, missionKey, table,",
    SaveUnitPoolHandleBJ = "whichUnitpool, key, missionKey, table,",
    SaveItemPoolHandleBJ = "whichItempool, key, missionKey, table,",
    SaveQuestHandleBJ = "whichQuest, key, missionKey, table,",
    SaveQuestItemHandleBJ = "questwhichQuestitem, key, missionKey, table,",
    SaveDefeatConditionHandleBJ = "whichDefeatcondition, key, missionKey, table,",
    SaveTimerDialogHandleBJ = "timerwhichTimerdialog, key, missionKey, table,",
    SaveLeaderboardHandleBJ = "whichLeaderboard, key, missionKey, table,",
    SaveMultiboardHandleBJ = "whichMultiboard, key, missionKey, table,",
    SaveMultiboardItemHandleBJ = "multiboardwhichMultiboarditem, key, missionKey, table,",
    SaveTrackableHandleBJ = "whichTrackable, key, missionKey, table,",
    SaveDialogHandleBJ = "whichDialog, key, missionKey, table,",
    SaveButtonHandleBJ = "whichButton, key, missionKey, table,",
    SaveTextTagHandleBJ = "whichTexttag, key, missionKey, table,",
    SaveLightningHandleBJ = "whichLightning, key, missionKey, table,",
    SaveImageHandleBJ = "whichImage, key, missionKey, table,",
    SaveUbersplatHandleBJ = "whichUbersplat, key, missionKey, table,",
    SaveRegionHandleBJ = "whichRegion, key, missionKey, table,",
    SaveFogStateHandleBJ = "whichFogState, key, missionKey, table,",
    SaveFogModifierHandleBJ = "whichFogModifier, key, missionKey, table,",
    SaveAgentHandleBJ = "whichAgent, key, missionKey, table,",
    SaveHashtableHandleBJ = "whichHashtable, key, missionKey, table,",
    GetStoredRealBJ = "key, missionKey, cache,",
    GetStoredIntegerBJ = "key, missionKey, cache,",
    GetStoredBooleanBJ = "key, missionKey, cache,",
    GetStoredStringBJ = "key, missionKey, cache,",
    LoadRealBJ = "key, missionKey, table,",
    LoadIntegerBJ = "key, missionKey, table,",
    LoadBooleanBJ = "key, missionKey, table,",
    LoadStringBJ = "key, missionKey, table,",
    LoadPlayerHandleBJ = "key, missionKey, table,",
    LoadWidgetHandleBJ = "key, missionKey, table,",
    LoadDestructableHandleBJ = "key, missionKey, table,",
    LoadItemHandleBJ = "key, missionKey, table,",
    LoadUnitHandleBJ = "key, missionKey, table,",
    LoadAbilityHandleBJ = "key, missionKey, table,",
    LoadTimerHandleBJ = "key, missionKey, table,",
    LoadTriggerHandleBJ = "key, missionKey, table,",
    LoadTriggerConditionHandleBJ = "key, missionKey, table,",
    LoadTriggerActionHandleBJ = "key, missionKey, table,",
    LoadTriggerEventHandleBJ = "key, missionKey, table,",
    LoadForceHandleBJ = "key, missionKey, table,",
    LoadGroupHandleBJ = "key, missionKey, table,",
    LoadLocationHandleBJ = "key, missionKey, table,",
    LoadRectHandleBJ = "key, missionKey, table,",
    LoadBooleanExprHandleBJ = "key, missionKey, table,",
    LoadSoundHandleBJ = "key, missionKey, table,",
    LoadEffectHandleBJ = "key, missionKey, table,",
    LoadUnitPoolHandleBJ = "key, missionKey, table,",
    LoadItemPoolHandleBJ = "key, missionKey, table,",
    LoadQuestHandleBJ = "key, missionKey, table,",
    LoadQuestItemHandleBJ = "key, missionKey, table,",
    LoadDefeatConditionHandleBJ = "key, missionKey, table,",
    LoadTimerDialogHandleBJ = "key, missionKey, table,",
    LoadLeaderboardHandleBJ = "key, missionKey, table,",
    LoadMultiboardHandleBJ = "key, missionKey, table,",
    LoadMultiboardItemHandleBJ = "key, missionKey, table,",
    LoadTrackableHandleBJ = "key, missionKey, table,",
    LoadDialogHandleBJ = "key, missionKey, table,",
    LoadButtonHandleBJ = "key, missionKey, table,",
    LoadTextTagHandleBJ = "key, missionKey, table,",
    LoadLightningHandleBJ = "key, missionKey, table,",
    LoadImageHandleBJ = "key, missionKey, table,",
    LoadUbersplatHandleBJ = "key, missionKey, table,",
    LoadRegionHandleBJ = "key, missionKey, table,",
    LoadFogStateHandleBJ = "key, missionKey, table,",
    LoadFogModifierHandleBJ = "key, missionKey, table,",
    LoadHashtableHandleBJ = "key, missionKey, table,",
    RestoreUnitLocFacingAngleBJ = "key, missionKey, cache, forWhichPlayer, loc, facing,",
    RestoreUnitLocFacingPointBJ = "key, missionKey, cache, forWhichPlayer, loc, lookAt,",
    GetLastRestoredUnitBJ = ",",
    FlushGameCacheBJ = "cache,",
    FlushStoredMissionBJ = "missionKey, cache,",
    FlushParentHashtableBJ = "table,",
    FlushChildHashtableBJ = "missionKey, table,",
    HaveStoredValue = "key, valueType, missionKey, cache,",
    HaveSavedValue = "key, valueType, missionKey, table,",
    ShowCustomCampaignButton = "show, whichButton,",
    IsCustomCampaignButtonVisibile = "whichButton,",
    SaveGameCheckPointBJ = "mapSaveName, doCheckpointHint,",
    LoadGameBJ = "loadFileName, doScoreScreen,",
    SaveAndChangeLevelBJ = "saveFileName, newLevel, doScoreScreen,",
    SaveAndLoadGameBJ = "saveFileName, loadFileName, doScoreScreen,",
    RenameSaveDirectoryBJ = "sourceDirName, destDirName,",
    RemoveSaveDirectoryBJ = "sourceDirName,",
    CopySaveGameBJ = "sourceSaveName, destSaveName,",
    GetPlayerStartLocationX = "whichPlayer,",
    GetPlayerStartLocationY = "whichPlayer,",
    GetPlayerStartLocationLoc = "whichPlayer,",
    GetRectCenter = "whichRect,",
    IsPlayerSlotState = "whichPlayer, whichState,",
    GetFadeFromSeconds = "seconds,",
    GetFadeFromSecondsAsReal = "seconds,",
    AdjustPlayerStateSimpleBJ = "whichPlayer, whichPlayerState, delta,",
    AdjustPlayerStateBJ = "delta, whichPlayer, whichPlayerState,",
    SetPlayerStateBJ = "whichPlayer, whichPlayerState, value,",
    SetPlayerFlagBJ = "whichPlayerFlag, flag, whichPlayer,",
    SetPlayerTaxRateBJ = "rate, whichResource, sourcePlayer, otherPlayer,",
    GetPlayerTaxRateBJ = "whichResource, sourcePlayer, otherPlayer,",
    IsPlayerFlagSetBJ = "whichPlayerFlag, whichPlayer,",
    AddResourceAmountBJ = "delta, whichUnit,",
    GetConvertedPlayerId = "whichPlayer,",
    ConvertedPlayer = "convertedPlayerId,",
    GetRectWidthBJ = "r,",
    GetRectHeightBJ = "r,",
    BlightGoldMineForPlayerBJ = "goldMine, whichPlayer,",
    BlightGoldMineForPlayer = "goldMine, whichPlayer,",
    GetLastHauntedGoldMine = ",",
    IsPointBlightedBJ = "where,",
    SetPlayerColorBJEnum = ",",
    SetPlayerColorBJ = "whichPlayer, color, changeExisting,",
    SetPlayerUnitAvailableBJ = "unitId, allowed, whichPlayer,",
    LockGameSpeedBJ = ",",
    UnlockGameSpeedBJ = ",",
    IssueTargetOrderBJ = "whichUnit, order, targetWidget,",
    IssuePointOrderLocBJ = "whichUnit, order, whichLocation,",
    IssueTargetDestructableOrder = "whichUnit, order, targetWidget,",
    IssueTargetItemOrder = "whichUnit, order, targetWidget,",
    IssueImmediateOrderBJ = "whichUnit, order,",
    GroupTargetOrderBJ = "whichGroup, order, targetWidget,",
    GroupPointOrderLocBJ = "whichGroup, order, whichLocation,",
    GroupImmediateOrderBJ = "whichGroup, order,",
    GroupTargetDestructableOrder = "whichGroup, order, targetWidget,",
    GroupTargetItemOrder = "whichGroup, order, targetWidget,",
    GetDyingDestructable = ",",
    SetUnitRallyPoint = "whichUnit, targPos,",
    SetUnitRallyUnit = "whichUnit, targUnit,",
    SetUnitRallyDestructable = "whichUnit, targDest,",
    SaveDyingWidget = ",",
    SetBlightRectBJ = "addBlight, whichPlayer, r,",
    SetBlightRadiusLocBJ = "addBlight, whichPlayer, loc, radius,",
    GetAbilityName = "abilcode,",
    MeleeStartingVisibility = ",",
    MeleeStartingResources = ",",
    ReducePlayerTechMaxAllowed = "whichPlayer, techId, limit,",
    MeleeStartingHeroLimit = ",",
    MeleeTrainedUnitIsHeroBJFilter = ",",
    MeleeGrantItemsToHero = "whichUnit,",
    MeleeGrantItemsToTrainedHero = ",",
    MeleeGrantItemsToHiredHero = ",",
    MeleeGrantHeroItems = ",",
    MeleeClearExcessUnit = ",",
    MeleeClearNearbyUnits = "x, y, range,",
    MeleeClearExcessUnits = ",",
    MeleeEnumFindNearestMine = ",",
    MeleeFindNearestMine = "src, range,",
    MeleeRandomHeroLoc = "p, id1, id2, id3, id4, loc,",
    MeleeGetProjectedLoc = "src, targ, distance, deltaAngle,",
    MeleeGetNearestValueWithin = "val, minVal, maxVal,",
    MeleeGetLocWithinRect = "src, r,",
    MeleeStartingUnitsHuman = "whichPlayer, startLoc, doHeroes, doCamera, doPreload,",
    MeleeStartingUnitsOrc = "whichPlayer, startLoc, doHeroes, doCamera, doPreload,",
    MeleeStartingUnitsUndead = "whichPlayer, startLoc, doHeroes, doCamera, doPreload,",
    MeleeStartingUnitsNightElf = "whichPlayer, startLoc, doHeroes, doCamera, doPreload,",
    MeleeStartingUnitsUnknownRace = "whichPlayer, startLoc, doHeroes, doCamera, doPreload,",
    MeleeStartingUnits = ",",
    MeleeStartingUnitsForPlayer = "whichRace, whichPlayer, loc, doHeroes,",
    PickMeleeAI = "num, s1, s2, s3,",
    MeleeStartingAI = ",",
    LockGuardPosition = "targ,",
    MeleePlayerIsOpponent = "playerIndex, opponentIndex,",
    MeleeGetAllyStructureCount = "whichPlayer,",
    MeleeGetAllyCount = "whichPlayer,",
    MeleeGetAllyKeyStructureCount = "whichPlayer,",
    MeleeDoDrawEnum = ",",
    MeleeDoVictoryEnum = ",",
    MeleeDoDefeat = "whichPlayer,",
    MeleeDoDefeatEnum = ",",
    MeleeDoLeave = "whichPlayer,",
    MeleeRemoveObservers = ",",
    MeleeCheckForVictors = ",",
    MeleeCheckForLosersAndVictors = ",",
    MeleeGetCrippledWarningMessage = "whichPlayer,",
    MeleeGetCrippledTimerMessage = "whichPlayer,",
    MeleeGetCrippledRevealedMessage = "whichPlayer,",
    MeleeExposePlayer = "whichPlayer, expose,",
    MeleeExposeAllPlayers = ",",
    MeleeCrippledPlayerTimeout = ",",
    MeleePlayerIsCrippled = "whichPlayer,",
    MeleeCheckForCrippledPlayers = ",",
    MeleeCheckLostUnit = "lostUnit,",
    MeleeCheckAddedUnit = "addedUnit,",
    MeleeTriggerActionConstructCancel = ",",
    MeleeTriggerActionUnitDeath = ",",
    MeleeTriggerActionUnitConstructionStart = ",",
    MeleeTriggerActionPlayerDefeated = ",",
    MeleeTriggerActionPlayerLeft = ",",
    MeleeTriggerActionAllianceChange = ",",
    MeleeTriggerTournamentFinishSoon = ",",
    MeleeWasUserPlayer = "whichPlayer,",
    MeleeTournamentFinishNowRuleA = "multiplier,",
    MeleeTriggerTournamentFinishNow = ",",
    MeleeInitVictoryDefeat = ",",
    CheckInitPlayerSlotAvailability = ",",
    SetPlayerSlotAvailable = "whichPlayer, control,",
    TeamInitPlayerSlots = "teamCount,",
    MeleeInitPlayerSlots = ",",
    FFAInitPlayerSlots = ",",
    OneOnOneInitPlayerSlots = ",",
    InitGenericPlayerSlots = ",",
    SetDNCSoundsDawn = ",",
    SetDNCSoundsDusk = ",",
    SetDNCSoundsDay = ",",
    SetDNCSoundsNight = ",",
    InitDNCSounds = ",",
    InitBlizzardGlobals = ",",
    InitQueuedTriggers = ",",
    InitMapRects = ",",
    InitSummonableCaps = ",",
    UpdateStockAvailability = "whichItem,",
    UpdateEachStockBuildingEnum = ",",
    UpdateEachStockBuilding = "iType, iLevel,",
    PerformStockUpdates = ",",
    StartStockUpdates = ",",
    RemovePurchasedItem = ",",
    InitNeutralBuildings = ",",
    MarkGameStarted = ",",
    DetectGameStarted = ",",
    InitBlizzard = ",",
    RandomDistReset = ",",
    RandomDistAddItem = "inID, inChance,",
    RandomDistChoose = ",",
    UnitDropItem = "inUnit, inItemID,",
    WidgetDropItem = "inWidget, inItemID,",
    BlzIsLastInstanceObjectFunctionSuccessful = ",",
    BlzSetAbilityBooleanFieldBJ = "whichAbility, whichField, value,",
    BlzSetAbilityIntegerFieldBJ = "whichAbility, whichField, value,",
    BlzSetAbilityRealFieldBJ = "whichAbility, whichField, value,",
    BlzSetAbilityStringFieldBJ = "whichAbility, whichField, value,",
    BlzSetAbilityBooleanLevelFieldBJ = "whichAbility, whichField, level, value,",
    BlzSetAbilityIntegerLevelFieldBJ = "whichAbility, whichField, level, value,",
    BlzSetAbilityRealLevelFieldBJ = "whichAbility, whichField, level, value,",
    BlzSetAbilityStringLevelFieldBJ = "whichAbility, whichField, level, value,",
    BlzSetAbilityBooleanLevelArrayFieldBJ = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityIntegerLevelArrayFieldBJ = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityRealLevelArrayFieldBJ = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityStringLevelArrayFieldBJ = "whichAbility, whichField, level, index, value,",
    BlzAddAbilityBooleanLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzAddAbilityIntegerLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzAddAbilityRealLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzAddAbilityStringLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityBooleanLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityIntegerLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityRealLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityStringLevelArrayFieldBJ = "whichAbility, whichField, level, value,",
    BlzItemAddAbilityBJ = "whichItem, abilCode,",
    BlzItemRemoveAbilityBJ = "whichItem, abilCode,",
    BlzSetItemBooleanFieldBJ = "whichItem, whichField, value,",
    BlzSetItemIntegerFieldBJ = "whichItem, whichField, value,",
    BlzSetItemRealFieldBJ = "whichItem, whichField, value,",
    BlzSetItemStringFieldBJ = "whichItem, whichField, value,",
    BlzSetUnitBooleanFieldBJ = "whichUnit, whichField, value,",
    BlzSetUnitIntegerFieldBJ = "whichUnit, whichField, value,",
    BlzSetUnitRealFieldBJ = "whichUnit, whichField, value,",
    BlzSetUnitStringFieldBJ = "whichUnit, whichField, value,",
    BlzSetUnitWeaponBooleanFieldBJ = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponIntegerFieldBJ = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponRealFieldBJ = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponStringFieldBJ = "whichUnit, whichField, index, value,",
    ConvertRace = "i,",
    ConvertAllianceType = "i,",
    ConvertRacePref = "i,",
    ConvertIGameState = "i,",
    ConvertFGameState = "i,",
    ConvertPlayerState = "i,",
    ConvertPlayerScore = "i,",
    ConvertPlayerGameResult = "i,",
    ConvertUnitState = "i,",
    ConvertAIDifficulty = "i,",
    ConvertGameEvent = "i,",
    ConvertPlayerEvent = "i,",
    ConvertPlayerUnitEvent = "i,",
    ConvertWidgetEvent = "i,",
    ConvertDialogEvent = "i,",
    ConvertUnitEvent = "i,",
    ConvertLimitOp = "i,",
    ConvertUnitType = "i,",
    ConvertGameSpeed = "i,",
    ConvertPlacement = "i,",
    ConvertStartLocPrio = "i,",
    ConvertGameDifficulty = "i,",
    ConvertGameType = "i,",
    ConvertMapFlag = "i,",
    ConvertMapVisibility = "i,",
    ConvertMapSetting = "i,",
    ConvertMapDensity = "i,",
    ConvertMapControl = "i,",
    ConvertPlayerColor = "i,",
    ConvertPlayerSlotState = "i,",
    ConvertVolumeGroup = "i,",
    ConvertCameraField = "i,",
    ConvertBlendMode = "i,",
    ConvertRarityControl = "i,",
    ConvertTexMapFlags = "i,",
    ConvertFogState = "i,",
    ConvertEffectType = "i,",
    ConvertVersion = "i,",
    ConvertItemType = "i,",
    ConvertAttackType = "i,",
    ConvertDamageType = "i,",
    ConvertWeaponType = "i,",
    ConvertSoundType = "i,",
    ConvertPathingType = "i,",
    ConvertMouseButtonType = "i,",
    ConvertAnimType = "i,",
    ConvertSubAnimType = "i,",
    ConvertOriginFrameType = "i,",
    ConvertFramePointType = "i,",
    ConvertTextAlignType = "i,",
    ConvertFrameEventType = "i,",
    ConvertOsKeyType = "i,",
    ConvertAbilityIntegerField = "i,",
    ConvertAbilityRealField = "i,",
    ConvertAbilityBooleanField = "i,",
    ConvertAbilityStringField = "i,",
    ConvertAbilityIntegerLevelField = "i,",
    ConvertAbilityRealLevelField = "i,",
    ConvertAbilityBooleanLevelField = "i,",
    ConvertAbilityStringLevelField = "i,",
    ConvertAbilityIntegerLevelArrayField = "i,",
    ConvertAbilityRealLevelArrayField = "i,",
    ConvertAbilityBooleanLevelArrayField = "i,",
    ConvertAbilityStringLevelArrayField = "i,",
    ConvertUnitIntegerField = "i,",
    ConvertUnitRealField = "i,",
    ConvertUnitBooleanField = "i,",
    ConvertUnitStringField = "i,",
    ConvertUnitWeaponIntegerField = "i,",
    ConvertUnitWeaponRealField = "i,",
    ConvertUnitWeaponBooleanField = "i,",
    ConvertUnitWeaponStringField = "i,",
    ConvertItemIntegerField = "i,",
    ConvertItemRealField = "i,",
    ConvertItemBooleanField = "i,",
    ConvertItemStringField = "i,",
    ConvertMoveType = "i,",
    ConvertTargetFlag = "i,",
    ConvertArmorType = "i,",
    ConvertHeroAttribute = "i,",
    ConvertDefenseType = "i,",
    ConvertRegenType = "i,",
    ConvertUnitCategory = "i,",
    ConvertPathingFlag = "i,",
    OrderId = "orderIdString,",
    OrderId2String = "orderId,",
    UnitId = "unitIdString,",
    UnitId2String = "unitId,",
    AbilityId = "abilityIdString,",
    AbilityId2String = "abilityId,",
    GetObjectName = "objectId,",
    GetBJMaxPlayers = ",",
    GetBJPlayerNeutralVictim = ",",
    GetBJPlayerNeutralExtra = ",",
    GetBJMaxPlayerSlots = ",",
    GetPlayerNeutralPassive = ",",
    GetPlayerNeutralAggressive = ",",
    Deg2Rad = "degrees,",
    Rad2Deg = "radians,",
    Sin = "radians,",
    Cos = "radians,",
    Tan = "radians,",
    Asin = "y,",
    Acos = "x,",
    Atan = "x,",
    Atan2 = "y, x,",
    SquareRoot = "x,",
    Pow = "x, power,",
    MathRound = "r,",
    I2R = "i,",
    R2I = "r,",
    I2S = "i,",
    R2S = "r,",
    R2SW = "r, width, precision,",
    S2I = "s,",
    S2R = "s,",
    GetHandleId = "h,",
    SubString = "source, start, end_,",
    StringLength = "s,",
    StringCase = "source, upper,",
    StringHash = "s,",
    GetLocalizedString = "source,",
    GetLocalizedHotkey = "source,",
    SetMapName = "name,",
    SetMapDescription = "description,",
    SetTeams = "teamcount,",
    SetPlayers = "playercount,",
    DefineStartLocation = "whichStartLoc, x, y,",
    DefineStartLocationLoc = "whichStartLoc, whichLocation,",
    SetStartLocPrioCount = "whichStartLoc, prioSlotCount,",
    SetStartLocPrio = "whichStartLoc, prioSlotIndex, otherStartLocIndex, priority,",
    GetStartLocPrioSlot = "whichStartLoc, prioSlotIndex,",
    GetStartLocPrio = "whichStartLoc, prioSlotIndex,",
    SetEnemyStartLocPrioCount = "whichStartLoc, prioSlotCount,",
    SetEnemyStartLocPrio = "whichStartLoc, prioSlotIndex, otherStartLocIndex, priority,",
    SetGameTypeSupported = "whichGameType, value,",
    SetMapFlag = "whichMapFlag, value,",
    SetGamePlacement = "whichPlacementType,",
    SetGameSpeed = "whichspeed,",
    SetGameDifficulty = "whichdifficulty,",
    SetResourceDensity = "whichdensity,",
    SetCreatureDensity = "whichdensity,",
    GetTeams = ",",
    GetPlayers = ",",
    IsGameTypeSupported = "whichGameType,",
    GetGameTypeSelected = ",",
    IsMapFlagSet = "whichMapFlag,",
    GetGamePlacement = ",",
    GetGameSpeed = ",",
    GetGameDifficulty = ",",
    GetResourceDensity = ",",
    GetCreatureDensity = ",",
    GetStartLocationX = "whichStartLocation,",
    GetStartLocationY = "whichStartLocation,",
    GetStartLocationLoc = "whichStartLocation,",
    SetPlayerTeam = "whichPlayer, whichTeam,",
    SetPlayerStartLocation = "whichPlayer, startLocIndex,",
    ForcePlayerStartLocation = "whichPlayer, startLocIndex,",
    SetPlayerColor = "whichPlayer, color,",
    SetPlayerAlliance = "sourcePlayer, otherPlayer, whichAllianceSetting, value,",
    SetPlayerTaxRate = "sourcePlayer, otherPlayer, whichResource, rate,",
    SetPlayerRacePreference = "whichPlayer, whichRacePreference,",
    SetPlayerRaceSelectable = "whichPlayer, value,",
    SetPlayerController = "whichPlayer, controlType,",
    SetPlayerName = "whichPlayer, name,",
    SetPlayerOnScoreScreen = "whichPlayer, flag,",
    GetPlayerTeam = "whichPlayer,",
    GetPlayerStartLocation = "whichPlayer,",
    GetPlayerColor = "whichPlayer,",
    GetPlayerSelectable = "whichPlayer,",
    GetPlayerController = "whichPlayer,",
    GetPlayerSlotState = "whichPlayer,",
    GetPlayerTaxRate = "sourcePlayer, otherPlayer, whichResource,",
    IsPlayerRacePrefSet = "whichPlayer, pref,",
    GetPlayerName = "whichPlayer,",
    CreateTimer = ",",
    DestroyTimer = "whichTimer,",
    TimerStart = "whichTimer, timeout, periodic, handlerFunc,",
    TimerGetElapsed = "whichTimer,",
    TimerGetRemaining = "whichTimer,",
    TimerGetTimeout = "whichTimer,",
    PauseTimer = "whichTimer,",
    ResumeTimer = "whichTimer,",
    GetExpiredTimer = ",",
    CreateGroup = ",",
    DestroyGroup = "whichGroup,",
    GroupAddUnit = "whichGroup, whichUnit,",
    GroupRemoveUnit = "whichGroup, whichUnit,",
    BlzGroupAddGroupFast = "whichGroup, addGroup,",
    BlzGroupRemoveGroupFast = "whichGroup, removeGroup,",
    GroupClear = "whichGroup,",
    BlzGroupGetSize = "whichGroup,",
    BlzGroupUnitAt = "whichGroup, index,",
    GroupEnumUnitsOfType = "whichGroup, unitname, filter,",
    GroupEnumUnitsOfPlayer = "whichGroup, whichPlayer, filter,",
    GroupEnumUnitsOfTypeCounted = "whichGroup, unitname, filter, countLimit,",
    GroupEnumUnitsInRect = "whichGroup, r, filter,",
    GroupEnumUnitsInRectCounted = "whichGroup, r, filter, countLimit,",
    GroupEnumUnitsInRange = "whichGroup, x, y, radius, filter,",
    GroupEnumUnitsInRangeOfLoc = "whichGroup, whichLocation, radius, filter,",
    GroupEnumUnitsInRangeCounted = "whichGroup, x, y, radius, filter, countLimit,",
    GroupEnumUnitsInRangeOfLocCounted = "whichGroup, whichLocation, radius, filter, countLimit,",
    GroupEnumUnitsSelected = "whichGroup, whichPlayer, filter,",
    GroupImmediateOrder = "whichGroup, order,",
    GroupImmediateOrderById = "whichGroup, order,",
    GroupPointOrder = "whichGroup, order, x, y,",
    GroupPointOrderLoc = "whichGroup, order, whichLocation,",
    GroupPointOrderById = "whichGroup, order, x, y,",
    GroupPointOrderByIdLoc = "whichGroup, order, whichLocation,",
    GroupTargetOrder = "whichGroup, order, targetWidget,",
    GroupTargetOrderById = "whichGroup, order, targetWidget,",
    ForGroup = "whichGroup, callback,",
    FirstOfGroup = "whichGroup,",
    CreateForce = ",",
    DestroyForce = "whichForce,",
    ForceAddPlayer = "whichForce, whichPlayer,",
    ForceRemovePlayer = "whichForce, whichPlayer,",
    BlzForceHasPlayer = "whichForce, whichPlayer,",
    ForceClear = "whichForce,",
    ForceEnumPlayers = "whichForce, filter,",
    ForceEnumPlayersCounted = "whichForce, filter, countLimit,",
    ForceEnumAllies = "whichForce, whichPlayer, filter,",
    ForceEnumEnemies = "whichForce, whichPlayer, filter,",
    ForForce = "whichForce, callback,",
    Rect = "minx, miny, maxx, maxy,",
    RectFromLoc = "min, max,",
    RemoveRect = "whichRect,",
    SetRect = "whichRect, minx, miny, maxx, maxy,",
    SetRectFromLoc = "whichRect, min, max,",
    MoveRectTo = "whichRect, newCenterX, newCenterY,",
    MoveRectToLoc = "whichRect, newCenterLoc,",
    GetRectCenterX = "whichRect,",
    GetRectCenterY = "whichRect,",
    GetRectMinX = "whichRect,",
    GetRectMinY = "whichRect,",
    GetRectMaxX = "whichRect,",
    GetRectMaxY = "whichRect,",
    CreateRegion = ",",
    RemoveRegion = "whichRegion,",
    RegionAddRect = "whichRegion, r,",
    RegionClearRect = "whichRegion, r,",
    RegionAddCell = "whichRegion, x, y,",
    RegionAddCellAtLoc = "whichRegion, whichLocation,",
    RegionClearCell = "whichRegion, x, y,",
    RegionClearCellAtLoc = "whichRegion, whichLocation,",
    Location = "x, y,",
    RemoveLocation = "whichLocation,",
    MoveLocation = "whichLocation, newX, newY,",
    GetLocationX = "whichLocation,",
    GetLocationY = "whichLocation,",
    GetLocationZ = "whichLocation,",
	IsUnitInRegion = "whichRegion, whichUnit,",
    IsPointInRegion = "whichRegion, x, y,",
    IsLocationInRegion = "whichRegion, whichLocation,",
    GetWorldBounds = ",",
    CreateTrigger = ",",
    DestroyTrigger = "whichTrigger,",
    ResetTrigger = "whichTrigger,",
    EnableTrigger = "whichTrigger,",
    DisableTrigger = "whichTrigger,",
    IsTriggerEnabled = "whichTrigger,",
    TriggerWaitOnSleeps = "whichTrigger, flag,",
    IsTriggerWaitOnSleeps = "whichTrigger,",
    GetFilterUnit = ",",
    GetEnumUnit = ",",
    GetFilterDestructable = ",",
    GetEnumDestructable = ",",
    GetFilterItem = ",",
    GetEnumItem = ",",
    ParseTags = "taggedString,",
    GetFilterPlayer = ",",
    GetEnumPlayer = ",",
    GetTriggeringTrigger = ",",
    GetTriggerEventId = ",",
    GetTriggerEvalCount = "whichTrigger,",
    GetTriggerExecCount = "whichTrigger,",
    ExecuteFunc = "funcName,",
    And = "operandA, operandB,",
    Or = "operandA, operandB,",
    Not = "operand,",
    Condition = "func,",
    DestroyCondition = "c,",
    Filter = "func,",
    DestroyFilter = "f,",
    DestroyBoolExpr = "e,",
    TriggerRegisterVariableEvent = "whichTrigger, varName, opcode, limitval,",
    TriggerRegisterTimerEvent = "whichTrigger, timeout, periodic,",
    TriggerRegisterTimerExpireEvent = "whichTrigger, t,",
    TriggerRegisterGameStateEvent = "whichTrigger, whichState, opcode, limitval,",
    TriggerRegisterDialogEvent = "whichTrigger, whichDialog,",
    TriggerRegisterDialogButtonEvent = "whichTrigger, whichButton,",
    GetEventGameState = ",",
    TriggerRegisterGameEvent = "whichTrigger, whichGameEvent,",
    GetWinningPlayer = ",",
    TriggerRegisterEnterRegion = "whichTrigger, whichRegion, filter,",
    GetTriggeringRegion = ",",
    GetEnteringUnit = ",",
    TriggerRegisterLeaveRegion = "whichTrigger, whichRegion, filter,",
    GetLeavingUnit = ",",
    TriggerRegisterTrackableHitEvent = "whichTrigger, t,",
    TriggerRegisterTrackableTrackEvent = "whichTrigger, t,",
    TriggerRegisterCommandEvent = "whichTrigger, whichAbility, order,",
    TriggerRegisterUpgradeCommandEvent = "whichTrigger, whichUpgrade,",
    GetTriggeringTrackable = ",",
    GetClickedButton = ",",
    GetClickedDialog = ",",
    GetTournamentFinishSoonTimeRemaining = ",",
    GetTournamentFinishNowRule = ",",
    GetTournamentFinishNowPlayer = ",",
    GetTournamentScore = "whichPlayer,",
    GetSaveBasicFilename = ",",
    TriggerRegisterPlayerEvent = "whichTrigger, whichPlayer, whichPlayerEvent,",
    GetTriggerPlayer = ",",
    TriggerRegisterPlayerUnitEvent = "whichTrigger, whichPlayer, whichPlayerUnitEvent, filter,",
    GetLevelingUnit = ",",
    GetLearningUnit = ",",
    GetLearnedSkill = ",",
    GetLearnedSkillLevel = ",",
    GetRevivableUnit = ",",
    GetRevivingUnit = ",",
    GetAttacker = ",",
    GetRescuer = ",",
    GetDyingUnit = ",",
    GetKillingUnit = ",",
    GetDecayingUnit = ",",
    GetConstructingStructure = ",",
    GetCancelledStructure = ",",
    GetConstructedStructure = ",",
    GetResearchingUnit = ",",
    GetResearched = ",",
    GetTrainedUnitType = ",",
    GetTrainedUnit = ",",
    GetDetectedUnit = ",",
    GetSummoningUnit = ",",
    GetSummonedUnit = ",",
    GetTransportUnit = ",",
    GetLoadedUnit = ",",
    GetSellingUnit = ",",
    GetSoldUnit = ",",
    GetBuyingUnit = ",",
    GetSoldItem = ",",
    GetChangingUnit = ",",
    GetChangingUnitPrevOwner = ",",
    GetManipulatingUnit = ",",
    GetManipulatedItem = ",",
    BlzGetAbsorbingItem = ",",
    BlzGetManipulatedItemWasAbsorbed = ",",
    BlzGetStackingItemSource = ",",
    BlzGetStackingItemTarget = ",",
    BlzGetStackingItemTargetPreviousCharges = ",",
    GetOrderedUnit = ",",
    GetIssuedOrderId = ",",
    GetOrderPointX = ",",
    GetOrderPointY = ",",
    GetOrderPointLoc = ",",
    GetOrderTarget = ",",
    GetOrderTargetDestructable = ",",
    GetOrderTargetItem = ",",
    GetOrderTargetUnit = ",",
    GetSpellAbilityUnit = ",",
    GetSpellAbilityId = ",",
    GetSpellAbility = ",",
    GetSpellTargetLoc = ",",
    GetSpellTargetX = ",",
    GetSpellTargetY = ",",
    GetSpellTargetDestructable = ",",
    GetSpellTargetItem = ",",
    GetSpellTargetUnit = ",",
    TriggerRegisterPlayerAllianceChange = "whichTrigger, whichPlayer, whichAlliance,",
    TriggerRegisterPlayerStateEvent = "whichTrigger, whichPlayer, whichState, opcode, limitval,",
    GetEventPlayerState = ",",
    TriggerRegisterPlayerChatEvent = "whichTrigger, whichPlayer, chatMessageToDetect, exactMatchOnly,",
    GetEventPlayerChatString = ",",
    GetEventPlayerChatStringMatched = ",",
    TriggerRegisterDeathEvent = "whichTrigger, whichWidget,",
    GetTriggerUnit = ",",
    TriggerRegisterUnitStateEvent = "whichTrigger, whichUnit, whichState, opcode, limitval,",
    GetEventUnitState = ",",
    TriggerRegisterUnitEvent = "whichTrigger, whichUnit, whichEvent,",
    GetEventDamage = ",",
    GetEventDamageSource = ",",
    GetEventDetectingPlayer = ",",
    TriggerRegisterFilterUnitEvent = "whichTrigger, whichUnit, whichEvent, filter,",
    GetEventTargetUnit = ",",
    TriggerRegisterUnitInRange = "whichTrigger, whichUnit, range, filter,",
    TriggerAddCondition = "whichTrigger, condition,",
    TriggerRemoveCondition = "whichTrigger, whichCondition,",
    TriggerClearConditions = "whichTrigger,",
    TriggerAddAction = "whichTrigger, actionFunc,",
    TriggerRemoveAction = "whichTrigger, whichAction,",
    TriggerClearActions = "whichTrigger,",
    TriggerSleepAction = "timeout,",
    TriggerWaitForSound = "s, offset,",
    TriggerEvaluate = "whichTrigger,",
    TriggerExecute = "whichTrigger,",
    TriggerExecuteWait = "whichTrigger,",
    TriggerSyncStart = ",",
    TriggerSyncReady = ",",
    GetWidgetLife = "whichWidget,",
    SetWidgetLife = "whichWidget, newLife,",
    GetWidgetX = "whichWidget,",
    GetWidgetY = "whichWidget,",
    GetTriggerWidget = ",",
    CreateDestructable = "objectid, x, y, face, scale, variation,",
    CreateDestructableZ = "objectid, x, y, z, face, scale, variation,",
    CreateDeadDestructable = "objectid, x, y, face, scale, variation,",
    CreateDeadDestructableZ = "objectid, x, y, z, face, scale, variation,",
    RemoveDestructable = "d,",
    KillDestructable = "d,",
    SetDestructableInvulnerable = "d, flag,",
    IsDestructableInvulnerable = "d,",
    EnumDestructablesInRect = "r, filter, actionFunc,",
    GetDestructableTypeId = "d,",
    GetDestructableX = "d,",
    GetDestructableY = "d,",
    SetDestructableLife = "d, life,",
    GetDestructableLife = "d,",
    SetDestructableMaxLife = "d, max,",
    GetDestructableMaxLife = "d,",
    DestructableRestoreLife = "d, life, birth,",
    QueueDestructableAnimation = "d, whichAnimation,",
    SetDestructableAnimation = "d, whichAnimation,",
    SetDestructableAnimationSpeed = "d, speedFactor,",
    ShowDestructable = "d, flag,",
    GetDestructableOccluderHeight = "d,",
    SetDestructableOccluderHeight = "d, height,",
    GetDestructableName = "d,",
    GetTriggerDestructable = ",",
    CreateItem = "itemid, x, y,",
    RemoveItem = "whichItem,",
    GetItemPlayer = "whichItem,",
    GetItemTypeId = "i,",
    GetItemX = "i,",
    GetItemY = "i,",
    SetItemPosition = "i, x, y,",
    SetItemDropOnDeath = "whichItem, flag,",
    SetItemDroppable = "i, flag,",
    SetItemPawnable = "i, flag,",
    SetItemPlayer = "whichItem, whichPlayer, changeColor,",
    SetItemInvulnerable = "whichItem, flag,",
    IsItemInvulnerable = "whichItem,",
    SetItemVisible = "whichItem, show,",
    IsItemVisible = "whichItem,",
    IsItemOwned = "whichItem,",
    IsItemPowerup = "whichItem,",
    IsItemSellable = "whichItem,",
    IsItemPawnable = "whichItem,",
    IsItemIdPowerup = "itemId,",
    IsItemIdSellable = "itemId,",
    IsItemIdPawnable = "itemId,",
    EnumItemsInRect = "r, filter, actionFunc,",
    GetItemLevel = "whichItem,",
    GetItemType = "whichItem,",
    SetItemDropID = "whichItem, unitId,",
    GetItemName = "whichItem,",
    GetItemCharges = "whichItem,",
    SetItemCharges = "whichItem, charges,",
    GetItemUserData = "whichItem,",
	SetItemUserData = "whichItem, data,",
    CreateUnit = "id, unitid, x, y, face,",
    CreateUnitByName = "whichPlayer, unitname, x, y, face,",
    CreateUnitAtLoc = "id, unitid, whichLocation, face,",
    CreateUnitAtLocByName = "id, unitname, whichLocation, face,",
    CreateCorpse = "whichPlayer, unitid, x, y, face,",
    KillUnit = "whichUnit,",
    RemoveUnit = "whichUnit,",
    ShowUnit = "whichUnit, show,",
    SetUnitState = "whichUnit, whichUnitState, newVal,",
    SetUnitX = "whichUnit, newX,",
    SetUnitY = "whichUnit, newY,",
    SetUnitPosition = "whichUnit, newX, newY,",
    SetUnitPositionLoc = "whichUnit, whichLocation,",
    SetUnitFacing = "whichUnit, facingAngle,",
    SetUnitFacingTimed = "whichUnit, facingAngle, duration,",
    SetUnitMoveSpeed = "whichUnit, newSpeed,",
    SetUnitFlyHeight = "whichUnit, newHeight, rate,",
    SetUnitTurnSpeed = "whichUnit, newTurnSpeed,",
    SetUnitPropWindow = "whichUnit, newPropWindowAngle,",
    SetUnitAcquireRange = "whichUnit, newAcquireRange,",
    SetUnitCreepGuard = "whichUnit, creepGuard,",
    GetUnitAcquireRange = "whichUnit,",
    GetUnitTurnSpeed = "whichUnit,",
    GetUnitPropWindow = "whichUnit,",
    GetUnitFlyHeight = "whichUnit,",
    GetUnitDefaultAcquireRange = "whichUnit,",
    GetUnitDefaultTurnSpeed = "whichUnit,",
    GetUnitDefaultPropWindow = "whichUnit,",
    GetUnitDefaultFlyHeight = "whichUnit,",
    SetUnitOwner = "whichUnit, whichPlayer, changeColor,",
    SetUnitColor = "whichUnit, whichColor,",
    SetUnitScale = "whichUnit, scaleX, scaleY, scaleZ,",
    SetUnitTimeScale = "whichUnit, timeScale,",
    SetUnitBlendTime = "whichUnit, blendTime,",
    SetUnitVertexColor = "whichUnit, red, green, blue, alpha,",
    QueueUnitAnimation = "whichUnit, whichAnimation,",
    SetUnitAnimation = "whichUnit, whichAnimation,",
    SetUnitAnimationByIndex = "whichUnit, whichAnimation,",
    SetUnitAnimationWithRarity = "whichUnit, whichAnimation, rarity,",
    AddUnitAnimationProperties = "whichUnit, animProperties, add,",
    SetUnitLookAt = "whichUnit, whichBone, lookAtTarget, offsetX, offsetY, offsetZ,",
    ResetUnitLookAt = "whichUnit,",
    SetUnitRescuable = "whichUnit, byWhichPlayer, flag,",
    SetUnitRescueRange = "whichUnit, range,",
    SetHeroStr = "whichHero, newStr, permanent,",
    SetHeroAgi = "whichHero, newAgi, permanent,",
    SetHeroInt = "whichHero, newInt, permanent,",
    GetHeroStr = "whichHero, includeBonuses,",
    GetHeroAgi = "whichHero, includeBonuses,",
    GetHeroInt = "whichHero, includeBonuses,",
    UnitStripHeroLevel = "whichHero, howManyLevels,",
    GetHeroXP = "whichHero,",
    SetHeroXP = "whichHero, newXpVal, showEyeCandy,",
    GetHeroSkillPoints = "whichHero,",
    UnitModifySkillPoints = "whichHero, skillPointDelta,",
    AddHeroXP = "whichHero, xpToAdd, showEyeCandy,",
    SetHeroLevel = "whichHero, level, showEyeCandy,",
    GetHeroLevel = "whichHero,",
    GetUnitLevel = "whichUnit,",
    GetHeroProperName = "whichHero,",
    SuspendHeroXP = "whichHero, flag,",
    IsSuspendedXP = "whichHero,",
    SelectHeroSkill = "whichHero, abilcode,",
    GetUnitAbilityLevel = "whichUnit, abilcode,",
    DecUnitAbilityLevel = "whichUnit, abilcode,",
    IncUnitAbilityLevel = "whichUnit, abilcode,",
    SetUnitAbilityLevel = "whichUnit, abilcode, level,",
    ReviveHero = "whichHero, x, y, doEyecandy,",
    ReviveHeroLoc = "whichHero, loc, doEyecandy,",
    SetUnitExploded = "whichUnit, exploded,",
    SetUnitInvulnerable = "whichUnit, flag,",
    PauseUnit = "whichUnit, flag,",
    IsUnitPaused = "whichHero,",
    SetUnitPathing = "whichUnit, flag,",
    ClearSelection = ",",
    SelectUnit = "whichUnit, flag,",
    GetUnitPointValue = "whichUnit,",
    GetUnitPointValueByType = "unitType,",
    UnitAddItem = "whichUnit, whichItem,",
    UnitAddItemById = "whichUnit, itemId,",
    UnitAddItemToSlotById = "whichUnit, itemId, itemSlot,",
    UnitRemoveItem = "whichUnit, whichItem,",
    UnitRemoveItemFromSlot = "whichUnit, itemSlot,",
    UnitHasItem = "whichUnit, whichItem,",
    UnitItemInSlot = "whichUnit, itemSlot,",
    UnitInventorySize = "whichUnit,",
    UnitDropItemPoint = "whichUnit, whichItem, x, y,",
    UnitDropItemSlot = "whichUnit, whichItem, slot,",
    UnitDropItemTarget = "whichUnit, whichItem, target,",
    UnitUseItem = "whichUnit, whichItem,",
    UnitUseItemPoint = "whichUnit, whichItem, x, y,",
    UnitUseItemTarget = "whichUnit, whichItem, target,",
    GetUnitX = "whichUnit,",
    GetUnitY = "whichUnit,",
    GetUnitLoc = "whichUnit,",
    GetUnitFacing = "whichUnit,",
    GetUnitMoveSpeed = "whichUnit,",
    GetUnitDefaultMoveSpeed = "whichUnit,",
    GetUnitState = "whichUnit, whichUnitState,",
    GetOwningPlayer = "whichUnit,",
    GetUnitTypeId = "whichUnit,",
    GetUnitRace = "whichUnit,",
    GetUnitName = "whichUnit,",
    GetUnitFoodUsed = "whichUnit,",
    GetUnitFoodMade = "whichUnit,",
    GetFoodMade = "unitId,",
    GetFoodUsed = "unitId,",
    SetUnitUseFood = "whichUnit, useFood,",
    GetUnitRallyPoint = "whichUnit,",
    GetUnitRallyUnit = "whichUnit,",
    GetUnitRallyDestructable = "whichUnit,",
    IsUnitInGroup = "whichUnit, whichGroup,",
    IsUnitInForce = "whichUnit, whichForce,",
    IsUnitOwnedByPlayer = "whichUnit, whichPlayer,",
    IsUnitAlly = "whichUnit, whichPlayer,",
    IsUnitEnemy = "whichUnit, whichPlayer,",
    IsUnitVisible = "whichUnit, whichPlayer,",
    IsUnitDetected = "whichUnit, whichPlayer,",
    IsUnitInvisible = "whichUnit, whichPlayer,",
    IsUnitFogged = "whichUnit, whichPlayer,",
    IsUnitMasked = "whichUnit, whichPlayer,",
    IsUnitSelected = "whichUnit, whichPlayer,",
    IsUnitRace = "whichUnit, whichRace,",
    IsUnitType = "whichUnit, whichUnitType,",
    IsUnit = "whichUnit, whichSpecifiedUnit,",
    IsUnitInRange = "whichUnit, otherUnit, distance,",
    IsUnitInRangeXY = "whichUnit, x, y, distance,",
    IsUnitInRangeLoc = "whichUnit, whichLocation, distance,",
    IsUnitHidden = "whichUnit,",
    IsUnitIllusion = "whichUnit,",
    IsUnitInTransport = "whichUnit, whichTransport,",
    IsUnitLoaded = "whichUnit,",
    IsHeroUnitId = "unitId,",
    IsUnitIdType = "unitId, whichUnitType,",
    UnitShareVision = "whichUnit, whichPlayer, share,",
    UnitSuspendDecay = "whichUnit, suspend,",
    UnitAddType = "whichUnit, whichUnitType,",
    UnitRemoveType = "whichUnit, whichUnitType,",
    UnitAddAbility = "whichUnit, abilityId,",
    UnitRemoveAbility = "whichUnit, abilityId,",
    UnitMakeAbilityPermanent = "whichUnit, permanent, abilityId,",
    UnitRemoveBuffs = "whichUnit, removePositive, removeNegative,",
    UnitRemoveBuffsEx = "whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel,",
    UnitHasBuffsEx = "whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel,",
    UnitCountBuffsEx = "whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel,",
    UnitAddSleep = "whichUnit, add,",
    UnitCanSleep = "whichUnit,",
    UnitAddSleepPerm = "whichUnit, add,",
    UnitCanSleepPerm = "whichUnit,",
    UnitIsSleeping = "whichUnit,",
    UnitWakeUp = "whichUnit,",
    UnitApplyTimedLife = "whichUnit, buffId, duration,",
    UnitIgnoreAlarm = "whichUnit, flag,",
    UnitIgnoreAlarmToggled = "whichUnit,",
    UnitResetCooldown = "whichUnit,",
    UnitSetConstructionProgress = "whichUnit, constructionPercentage,",
    UnitSetUpgradeProgress = "whichUnit, upgradePercentage,",
    UnitPauseTimedLife = "whichUnit, flag,",
    UnitSetUsesAltIcon = "whichUnit, flag,",
    UnitDamagePoint = "whichUnit, delay, radius, x, y, amount, attack, ranged, attackType, damageType, weaponType,",
    UnitDamageTarget = "whichUnit, target, amount, attack, ranged, attackType, damageType, weaponType,",
    IssueImmediateOrder = "whichUnit, order,",
    IssueImmediateOrderById = "whichUnit, order,",
    IssuePointOrder = "whichUnit, order, x, y,",
    IssuePointOrderLoc = "whichUnit, order, whichLocation,",
    IssuePointOrderById = "whichUnit, order, x, y,",
    IssuePointOrderByIdLoc = "whichUnit, order, whichLocation,",
    IssueTargetOrder = "whichUnit, order, targetWidget,",
    IssueTargetOrderById = "whichUnit, order, targetWidget,",
    IssueInstantPointOrder = "whichUnit, order, x, y, instantTargetWidget,",
    IssueInstantPointOrderById = "whichUnit, order, x, y, instantTargetWidget,",
    IssueInstantTargetOrder = "whichUnit, order, targetWidget, instantTargetWidget,",
    IssueInstantTargetOrderById = "whichUnit, order, targetWidget, instantTargetWidget,",
    IssueBuildOrder = "whichPeon, unitToBuild, x, y,",
    IssueBuildOrderById = "whichPeon, unitId, x, y,",
    IssueNeutralImmediateOrder = "forWhichPlayer, neutralStructure, unitToBuild,",
    IssueNeutralImmediateOrderById = "forWhichPlayer, neutralStructure, unitId,",
    IssueNeutralPointOrder = "forWhichPlayer, neutralStructure, unitToBuild, x, y,",
    IssueNeutralPointOrderById = "forWhichPlayer, neutralStructure, unitId, x, y,",
    IssueNeutralTargetOrder = "forWhichPlayer, neutralStructure, unitToBuild, target,",
    IssueNeutralTargetOrderById = "forWhichPlayer, neutralStructure, unitId, target,",
    GetUnitCurrentOrder = "whichUnit,",
    SetResourceAmount = "whichUnit, amount,",
    AddResourceAmount = "whichUnit, amount,",
    GetResourceAmount = "whichUnit,",
    WaygateGetDestinationX = "waygate,",
    WaygateGetDestinationY = "waygate,",
    WaygateSetDestination = "waygate, x, y,",
    WaygateActivate = "waygate, activate,",
    WaygateIsActive = "waygate,",
    AddItemToAllStock = "itemId, currentStock, stockMax,",
    AddItemToStock = "whichUnit, itemId, currentStock, stockMax,",
    AddUnitToAllStock = "unitId, currentStock, stockMax,",
    AddUnitToStock = "whichUnit, unitId, currentStock, stockMax,",
    RemoveItemFromAllStock = "itemId,",
    RemoveItemFromStock = "whichUnit, itemId,",
    RemoveUnitFromAllStock = "unitId,",
    RemoveUnitFromStock = "whichUnit, unitId,",
    SetAllItemTypeSlots = "slots,",
    SetAllUnitTypeSlots = "slots,",
    SetItemTypeSlots = "whichUnit, slots,",
    SetUnitTypeSlots = "whichUnit, slots,",
    GetUnitUserData = "whichUnit,",
    SetUnitUserData = "whichUnit, data,",
    Player = "number,",
    GetLocalPlayer = ",",
    IsPlayerAlly = "whichPlayer, otherPlayer,",
    IsPlayerEnemy = "whichPlayer, otherPlayer,",
    IsPlayerInForce = "whichPlayer, whichForce,",
    IsPlayerObserver = "whichPlayer,",
    IsVisibleToPlayer = "x, y, whichPlayer,",
    IsLocationVisibleToPlayer = "whichLocation, whichPlayer,",
    IsFoggedToPlayer = "x, y, whichPlayer,",
    IsLocationFoggedToPlayer = "whichLocation, whichPlayer,",
    IsMaskedToPlayer = "x, y, whichPlayer,",
    IsLocationMaskedToPlayer = "whichLocation, whichPlayer,",
    GetPlayerRace = "whichPlayer,",
    GetPlayerId = "whichPlayer,",
    GetPlayerUnitCount = "whichPlayer, includeIncomplete,",
    GetPlayerTypedUnitCount = "whichPlayer, unitName, includeIncomplete, includeUpgrades,",
    GetPlayerStructureCount = "whichPlayer, includeIncomplete,",
    GetPlayerState = "whichPlayer, whichPlayerState,",
    GetPlayerScore = "whichPlayer, whichPlayerScore,",
    GetPlayerAlliance = "sourcePlayer, otherPlayer, whichAllianceSetting,",
    GetPlayerHandicap = "whichPlayer,",
    GetPlayerHandicapXP = "whichPlayer,",
    GetPlayerHandicapReviveTime = "whichPlayer,",
    GetPlayerHandicapDamage = "whichPlayer,",
    SetPlayerHandicap = "whichPlayer, handicap,",
    SetPlayerHandicapXP = "whichPlayer, handicap,",
    SetPlayerHandicapReviveTime = "whichPlayer, handicap,",
    SetPlayerHandicapDamage = "whichPlayer, handicap,",
    SetPlayerTechMaxAllowed = "whichPlayer, techid, maximum,",
    GetPlayerTechMaxAllowed = "whichPlayer, techid,",
    AddPlayerTechResearched = "whichPlayer, techid, levels,",
    SetPlayerTechResearched = "whichPlayer, techid, setToLevel,",
    GetPlayerTechResearched = "whichPlayer, techid, specificonly,",
    GetPlayerTechCount = "whichPlayer, techid, specificonly,",
    SetPlayerUnitsOwner = "whichPlayer, newOwner,",
    CripplePlayer = "whichPlayer, toWhichPlayers, flag,",
    SetPlayerAbilityAvailable = "whichPlayer, abilid, avail,",
    SetPlayerState = "whichPlayer, whichPlayerState, value,",
    RemovePlayer = "whichPlayer, gameResult,",
    CachePlayerHeroData = "whichPlayer,",
    SetFogStateRect = "forWhichPlayer, whichState, where, useSharedVision,",
    SetFogStateRadius = "forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision,",
    SetFogStateRadiusLoc = "forWhichPlayer, whichState, center, radius, useSharedVision,",
    FogMaskEnable = "enable,",
    IsFogMaskEnabled = ",",
    FogEnable = "enable,",
    IsFogEnabled = ",",
    CreateFogModifierRect = "forWhichPlayer, whichState, where, useSharedVision, afterUnits,",
    CreateFogModifierRadius = "forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision, afterUnits,",
    CreateFogModifierRadiusLoc = "forWhichPlayer, whichState, center, radius, useSharedVision, afterUnits,",
    DestroyFogModifier = "whichFogModifier,",
    FogModifierStart = "whichFogModifier,",
    FogModifierStop = "whichFogModifier,",
    VersionGet = ",",
    VersionCompatible = "whichVersion,",
    VersionSupported = "whichVersion,",
    EndGame = "doScoreScreen,",
    ChangeLevel = "newLevel, doScoreScreen,",
    RestartGame = "doScoreScreen,",
    ReloadGame = ",",
    SetCampaignMenuRace = "r,",
    SetCampaignMenuRaceEx = "campaignIndex,",
    ForceCampaignSelectScreen = ",",
    LoadGame = "saveFileName, doScoreScreen,",
    SaveGame = "saveFileName,",
    RenameSaveDirectory = "sourceDirName, destDirName,",
    RemoveSaveDirectory = "sourceDirName,",
    CopySaveGame = "sourceSaveName, destSaveName,",
    SaveGameExists = "saveName,",
    SetMaxCheckpointSaves = "maxCheckpointSaves,",
    SaveGameCheckpoint = "saveFileName, showWindow,",
    SyncSelections = ",",
    SetFloatGameState = "whichFloatGameState, value,",
    GetFloatGameState = "whichFloatGameState,",
    SetIntegerGameState = "whichIntegerGameState, value,",
    GetIntegerGameState = "whichIntegerGameState,",
    SetTutorialCleared = "cleared,",
    SetMissionAvailable = "campaignNumber, missionNumber, available,",
    SetCampaignAvailable = "campaignNumber, available,",
    SetOpCinematicAvailable = "campaignNumber, available,",
    SetEdCinematicAvailable = "campaignNumber, available,",
    GetDefaultDifficulty = ",",
    SetDefaultDifficulty = "g,",
    SetCustomCampaignButtonVisible = "whichButton, visible,",
    GetCustomCampaignButtonVisible = "whichButton,",
    DoNotSaveReplay = ",",
    DialogCreate = ",",
    DialogDestroy = "whichDialog,",
    DialogClear = "whichDialog,",
    DialogSetMessage = "whichDialog, messageText,",
    DialogAddButton = "whichDialog, buttonText, hotkey,",
    DialogAddQuitButton = "whichDialog, doScoreScreen, buttonText, hotkey,",
    DialogDisplay = "whichPlayer, whichDialog, flag,",
    ReloadGameCachesFromDisk = ",",
    InitGameCache = "campaignFile,",
    SaveGameCache = "whichCache,",
    StoreInteger = "cache, missionKey, key, value,",
    StoreReal = "cache, missionKey, key, value,",
    StoreBoolean = "cache, missionKey, key, value,",
    StoreUnit = "cache, missionKey, key, whichUnit,",
    StoreString = "cache, missionKey, key, value,",
    SyncStoredInteger = "cache, missionKey, key,",
    SyncStoredReal = "cache, missionKey, key,",
    SyncStoredBoolean = "cache, missionKey, key,",
    SyncStoredUnit = "cache, missionKey, key,",
    SyncStoredString = "cache, missionKey, key,",
    HaveStoredInteger = "cache, missionKey, key,",
    HaveStoredReal = "cache, missionKey, key,",
    HaveStoredBoolean = "cache, missionKey, key,",
    HaveStoredUnit = "cache, missionKey, key,",
    HaveStoredString = "cache, missionKey, key,",
    FlushGameCache = "cache,",
    FlushStoredMission = "cache, missionKey,",
    FlushStoredInteger = "cache, missionKey, key,",
    FlushStoredReal = "cache, missionKey, key,",
    FlushStoredBoolean = "cache, missionKey, key,",
    FlushStoredUnit = "cache, missionKey, key,",
    FlushStoredString = "cache, missionKey, key,",
    GetStoredInteger = "cache, missionKey, key,",
    GetStoredReal = "cache, missionKey, key,",
    GetStoredBoolean = "cache, missionKey, key,",
    GetStoredString = "cache, missionKey, key,",
    RestoreUnit = "cache, missionKey, key, forWhichPlayer, x, y, facing,",
    InitHashtable = ",",
    SaveInteger = "table, parentKey, childKey, value,",
    SaveReal = "table, parentKey, childKey, value,",
    SaveBoolean = "table, parentKey, childKey, value,",
    SaveStr = "table, parentKey, childKey, value,",
    SavePlayerHandle = "table, parentKey, childKey, whichPlayer,",
    SaveWidgetHandle = "table, parentKey, childKey, whichWidget,",
    SaveDestructableHandle = "table, parentKey, childKey, whichDestructable,",
    SaveItemHandle = "table, parentKey, childKey, whichItem,",
    SaveUnitHandle = "table, parentKey, childKey, whichUnit,",
    SaveAbilityHandle = "table, parentKey, childKey, whichAbility,",
    SaveTimerHandle = "table, parentKey, childKey, whichTimer,",
    SaveTriggerHandle = "table, parentKey, childKey, whichTrigger,",
    SaveTriggerConditionHandle = "table, parentKey, childKey, whichTriggercondition,",
    SaveTriggerActionHandle = "table, parentKey, childKey, whichTriggeraction,",
    SaveTriggerEventHandle = "table, parentKey, childKey, whichEvent,",
    SaveForceHandle = "table, parentKey, childKey, whichForce,",
    SaveGroupHandle = "table, parentKey, childKey, whichGroup,",
    SaveLocationHandle = "table, parentKey, childKey, whichLocation,",
    SaveRectHandle = "table, parentKey, childKey, whichRect,",
    SaveBooleanExprHandle = "table, parentKey, childKey, whichBoolexpr,",
    SaveSoundHandle = "table, parentKey, childKey, whichSound,",
    SaveEffectHandle = "table, parentKey, childKey, whichEffect,",
    SaveUnitPoolHandle = "table, parentKey, childKey, whichUnitpool,",
    SaveItemPoolHandle = "table, parentKey, childKey, whichItempool,",
    SaveQuestHandle = "table, parentKey, childKey, whichQuest,",
    SaveQuestItemHandle = "table, parentKey, childKey, whichQuestitem,",
    SaveDefeatConditionHandle = "table, parentKey, childKey, whichDefeatcondition,",
    SaveTimerDialogHandle = "table, parentKey, childKey, whichTimerdialog,",
    SaveLeaderboardHandle = "table, parentKey, childKey, whichLeaderboard,",
    SaveMultiboardHandle = "table, parentKey, childKey, whichMultiboard,",
    SaveMultiboardItemHandle = "table, parentKey, childKey, whichMultiboarditem,",
    SaveTrackableHandle = "table, parentKey, childKey, whichTrackable,",
    SaveDialogHandle = "table, parentKey, childKey, whichDialog,",
    SaveButtonHandle = "table, parentKey, childKey, whichButton,",
    SaveTextTagHandle = "table, parentKey, childKey, whichTexttag,",
    SaveLightningHandle = "table, parentKey, childKey, whichLightning,",
    SaveImageHandle = "table, parentKey, childKey, whichImage,",
    SaveUbersplatHandle = "table, parentKey, childKey, whichUbersplat,",
    SaveRegionHandle = "table, parentKey, childKey, whichRegion,",
    SaveFogStateHandle = "table, parentKey, childKey, whichFogState,",
    SaveFogModifierHandle = "table, parentKey, childKey, whichFogModifier,",
    SaveAgentHandle = "table, parentKey, childKey, whichAgent,",
    SaveHashtableHandle = "table, parentKey, childKey, whichHashtable,",
    SaveFrameHandle = "table, parentKey, childKey, whichFrameHandle,",
    LoadInteger = "table, parentKey, childKey,",
    LoadReal = "table, parentKey, childKey,",
    LoadBoolean = "table, parentKey, childKey,",
    LoadStr = "table, parentKey, childKey,",
    LoadPlayerHandle = "table, parentKey, childKey,",
    LoadWidgetHandle = "table, parentKey, childKey,",
    LoadDestructableHandle = "table, parentKey, childKey,",
    LoadItemHandle = "table, parentKey, childKey,",
    LoadUnitHandle = "table, parentKey, childKey,",
    LoadAbilityHandle = "table, parentKey, childKey,",
    LoadTimerHandle = "table, parentKey, childKey,",
    LoadTriggerHandle = "table, parentKey, childKey,",
    LoadTriggerConditionHandle = "table, parentKey, childKey,",
    LoadTriggerActionHandle = "table, parentKey, childKey,",
    LoadTriggerEventHandle = "table, parentKey, childKey,",
    LoadForceHandle = "table, parentKey, childKey,",
    LoadGroupHandle = "table, parentKey, childKey,",
    LoadLocationHandle = "table, parentKey, childKey,",
    LoadRectHandle = "table, parentKey, childKey,",
    LoadBooleanExprHandle = "table, parentKey, childKey,",
    LoadSoundHandle = "table, parentKey, childKey,",
    LoadEffectHandle = "table, parentKey, childKey,",
    LoadUnitPoolHandle = "table, parentKey, childKey,",
    LoadItemPoolHandle = "table, parentKey, childKey,",
    LoadQuestHandle = "table, parentKey, childKey,",
    LoadQuestItemHandle = "table, parentKey, childKey,",
    LoadDefeatConditionHandle = "table, parentKey, childKey,",
    LoadTimerDialogHandle = "table, parentKey, childKey,",
    LoadLeaderboardHandle = "table, parentKey, childKey,",
    LoadMultiboardHandle = "table, parentKey, childKey,",
    LoadMultiboardItemHandle = "table, parentKey, childKey,",
    LoadTrackableHandle = "table, parentKey, childKey,",
    LoadDialogHandle = "table, parentKey, childKey,",
    LoadButtonHandle = "table, parentKey, childKey,",
    LoadTextTagHandle = "table, parentKey, childKey,",
    LoadLightningHandle = "table, parentKey, childKey,",
    LoadImageHandle = "table, parentKey, childKey,",
    LoadUbersplatHandle = "table, parentKey, childKey,",
    LoadRegionHandle = "table, parentKey, childKey,",
    LoadFogStateHandle = "table, parentKey, childKey,",
    LoadFogModifierHandle = "table, parentKey, childKey,",
    LoadHashtableHandle = "table, parentKey, childKey,",
    LoadFrameHandle = "table, parentKey, childKey,",
    HaveSavedInteger = "table, parentKey, childKey,",
    HaveSavedReal = "table, parentKey, childKey,",
    HaveSavedBoolean = "table, parentKey, childKey,",
    HaveSavedString = "table, parentKey, childKey,",
    HaveSavedHandle = "table, parentKey, childKey,",
    RemoveSavedInteger = "table, parentKey, childKey,",
    RemoveSavedReal = "table, parentKey, childKey,",
    RemoveSavedBoolean = "table, parentKey, childKey,",
    RemoveSavedString = "table, parentKey, childKey,",
    RemoveSavedHandle = "table, parentKey, childKey,",
    FlushParentHashtable = "table,",
    FlushChildHashtable = "table, parentKey,",
    GetRandomInt = "lowBound, highBound,",
    GetRandomReal = "lowBound, highBound,",
    CreateUnitPool = ",",
    DestroyUnitPool = "whichPool,",
    UnitPoolAddUnitType = "whichPool, unitId, weight,",
    UnitPoolRemoveUnitType = "whichPool, unitId,",
    PlaceRandomUnit = "whichPool, forWhichPlayer, x, y, facing,",
    CreateItemPool = ",",
    DestroyItemPool = "whichItemPool,",
    ItemPoolAddItemType = "whichItemPool, itemId, weight,",
    ItemPoolRemoveItemType = "whichItemPool, itemId,",
    PlaceRandomItem = "whichItemPool, x, y,",
    ChooseRandomCreep = "level,",
    ChooseRandomNPBuilding = ",",
    ChooseRandomItem = "level,",
    ChooseRandomItemEx = "whichType, level,",
    SetRandomSeed = "seed,",
    SetTerrainFog = "a, b, c, d, e,",
    ResetTerrainFog = ",",
    SetUnitFog = "a, b, c, d, e,",
    SetTerrainFogEx = "style, zstart, zend, density, red, green, blue,",
    DisplayTextToPlayer = "toPlayer, x, y, message,",
    DisplayTimedTextToPlayer = "toPlayer, x, y, duration, message,",
    DisplayTimedTextFromPlayer = "toPlayer, x, y, duration, message,",
    ClearTextMessages = ",",
    SetDayNightModels = "terrainDNCFile, unitDNCFile,",
    SetPortraitLight = "portraitDNCFile,",
    SetSkyModel = "skyModelFile,",
    EnableUserControl = "b,",
    EnableUserUI = "b,",
    SuspendTimeOfDay = "b,",
    SetTimeOfDayScale = "r,",
    GetTimeOfDayScale = ",",
    ShowInterface = "flag, fadeDuration,",
    PauseGame = "flag,",
    UnitAddIndicator = "whichUnit, red, green, blue, alpha,",
    AddIndicator = "whichWidget, red, green, blue, alpha,",
    PingMinimap = "x, y, duration,",
    PingMinimapEx = "x, y, duration, red, green, blue, extraEffects,",
    CreateMinimapIconOnUnit = "whichUnit, red, green, blue, pingPath, fogVisibility,",
    CreateMinimapIconAtLoc = "where, red, green, blue, pingPath, fogVisibility,",
    CreateMinimapIcon = "x, y, red, green, blue, pingPath, fogVisibility,",
    SkinManagerGetLocalPath = "key,",
    DestroyMinimapIcon = "pingId,",
    SetMinimapIconVisible = "whichMinimapIcon, visible,",
    SetMinimapIconOrphanDestroy = "whichMinimapIcon, doDestroy,",
    EnableOcclusion = "flag,",
    SetIntroShotText = "introText,",
    SetIntroShotModel = "introModelPath,",
    EnableWorldFogBoundary = "b,",
    PlayModelCinematic = "modelName,",
    PlayCinematic = "movieName,",
    ForceUIKey = "key,",
    ForceUICancel = ",",
    DisplayLoadDialog = ",",
    SetAltMinimapIcon = "iconPath,",
    DisableRestartMission = "flag,",
    CreateTextTag = ",",
    DestroyTextTag = "t,",
    SetTextTagText = "t, s, height,",
    SetTextTagPos = "t, x, y, heightOffset,",
    SetTextTagPosUnit = "t, whichUnit, heightOffset,",
    SetTextTagColor = "t, red, green, blue, alpha,",
    SetTextTagVelocity = "t, xvel, yvel,",
    SetTextTagVisibility = "t, flag,",
    SetTextTagSuspended = "t, flag,",
    SetTextTagPermanent = "t, flag,",
    SetTextTagAge = "t, age,",
    SetTextTagLifespan = "t, lifespan,",
    SetTextTagFadepoint = "t, fadepoint,",
    SetReservedLocalHeroButtons = "reserved,",
    GetAllyColorFilterState = ",",
    SetAllyColorFilterState = "state,",
    GetCreepCampFilterState = ",",
    SetCreepCampFilterState = "state,",
    EnableMinimapFilterButtons = "enableAlly, enableCreep,",
    EnableDragSelect = "state, ui,",
    EnablePreSelect = "state, ui,",
    EnableSelect = "state, ui,",
    CreateTrackable = "trackableModelPath, x, y, facing,",
    CreateQuest = ",",
    DestroyQuest = "whichQuest,",
    QuestSetTitle = "whichQuest, title,",
    QuestSetDescription = "whichQuest, description,",
    QuestSetIconPath = "whichQuest, iconPath,",
    QuestSetRequired = "whichQuest, required,",
    QuestSetCompleted = "whichQuest, completed,",
    QuestSetDiscovered = "whichQuest, discovered,",
    QuestSetFailed = "whichQuest, failed,",
    QuestSetEnabled = "whichQuest, enabled,",
    IsQuestRequired = "whichQuest,",
    IsQuestCompleted = "whichQuest,",
    IsQuestDiscovered = "whichQuest,",
    IsQuestFailed = "whichQuest,",
    IsQuestEnabled = "whichQuest,",
    QuestCreateItem = "whichQuest,",
    QuestItemSetDescription = "whichQuestItem, description,",
    QuestItemSetCompleted = "whichQuestItem, completed,",
    IsQuestItemCompleted = "whichQuestItem,",
    CreateDefeatCondition = ",",
    DestroyDefeatCondition = "whichCondition,",
    DefeatConditionSetDescription = "whichCondition, description,",
    FlashQuestDialogButton = ",",
    ForceQuestDialogUpdate = ",",
    CreateTimerDialog = "t,",
    DestroyTimerDialog = "whichDialog,",
    TimerDialogSetTitle = "whichDialog, title,",
    TimerDialogSetTitleColor = "whichDialog, red, green, blue, alpha,",
    TimerDialogSetTimeColor = "whichDialog, red, green, blue, alpha,",
    TimerDialogSetSpeed = "whichDialog, speedMultFactor,",
    TimerDialogDisplay = "whichDialog, display,",
    IsTimerDialogDisplayed = "whichDialog,",
    TimerDialogSetRealTimeRemaining = "whichDialog, timeRemaining,",
    CreateLeaderboard = ",",
    DestroyLeaderboard = "lb,",
    LeaderboardDisplay = "lb, show,",
    IsLeaderboardDisplayed = "lb,",
    LeaderboardGetItemCount = "lb,",
    LeaderboardSetSizeByItemCount = "lb, count,",
    LeaderboardAddItem = "lb, label, value, p,",
    LeaderboardRemoveItem = "lb, index,",
    LeaderboardRemovePlayerItem = "lb, p,",
    LeaderboardClear = "lb,",
    LeaderboardSortItemsByValue = "lb, ascending,",
    LeaderboardSortItemsByPlayer = "lb, ascending,",
    LeaderboardSortItemsByLabel = "lb, ascending,",
    LeaderboardHasPlayerItem = "lb, p,",
    LeaderboardGetPlayerIndex = "lb, p,",
    LeaderboardSetLabel = "lb, label,",
    LeaderboardGetLabelText = "lb,",
    PlayerSetLeaderboard = "toPlayer, lb,",
    PlayerGetLeaderboard = "toPlayer,",
    LeaderboardSetLabelColor = "lb, red, green, blue, alpha,",
    LeaderboardSetValueColor = "lb, red, green, blue, alpha,",
    LeaderboardSetStyle = "lb, showLabel, showNames, showValues, showIcon,",
    LeaderboardSetItemValue = "lb, whichItem, val,",
    LeaderboardSetItemLabel = "lb, whichItem, val,",
    LeaderboardSetItemStyle = "lb, whichItem, showLabel, showValue, showIcon,",
    LeaderboardSetItemLabelColor = "lb, whichItem, red, green, blue, alpha,",
    LeaderboardSetItemValueColor = "lb, whichItem, red, green, blue, alpha,",
    CreateMultiboard = ",",
    DestroyMultiboard = "lb,",
    MultiboardDisplay = "lb, show,",
    IsMultiboardDisplayed = "lb,",
    MultiboardMinimize = "lb, minimize,",
    IsMultiboardMinimized = "lb,",
    MultiboardClear = "lb,",
    MultiboardSetTitleText = "lb, label,",
    MultiboardGetTitleText = "lb,",
    MultiboardSetTitleTextColor = "lb, red, green, blue, alpha,",
    MultiboardGetRowCount = "lb,",
    MultiboardGetColumnCount = "lb,",
    MultiboardSetColumnCount = "lb, count,",
    MultiboardSetRowCount = "lb, count,",
    MultiboardSetItemsStyle = "lb, showValues, showIcon,",
    MultiboardSetItemsValue = "lb, value,",
    MultiboardSetItemsValueColor = "lb, red, green, blue, alpha,",
    MultiboardSetItemsWidth = "lb, width,",
    MultiboardSetItemsIcon = "lb, iconPath,",
    MultiboardGetItem = "lb, row, column,",
    MultiboardReleaseItem = "mbi,",
    MultiboardSetItemStyle = "mbi, showValue, showIcon,",
    MultiboardSetItemValue = "mbi, val,",
    MultiboardSetItemValueColor = "mbi, red, green, blue, alpha,",
    MultiboardSetItemWidth = "mbi, width,",
    MultiboardSetItemIcon = "mbi, iconFileName,",
    MultiboardSuppressDisplay = "flag,",
    SetCameraPosition = "x, y,",
    SetCameraQuickPosition = "x, y,",
    SetCameraBounds = "x1, y1, x2, y2, x3, y3, x4, y4,",
    StopCamera = ",",
    ResetToGameCamera = "duration,",
    PanCameraTo = "x, y,",
    PanCameraToTimed = "x, y, duration,",
    PanCameraToWithZ = "x, y, zOffsetDest,",
    PanCameraToTimedWithZ = "x, y, zOffsetDest, duration,",
    SetCinematicCamera = "cameraModelFile,",
    SetCameraRotateMode = "x, y, radiansToSweep, duration,",
    SetCameraField = "whichField, value, duration,",
    AdjustCameraField = "whichField, offset, duration,",
    SetCameraTargetController = "whichUnit, xoffset, yoffset, inheritOrientation,",
    SetCameraOrientController = "whichUnit, xoffset, yoffset,",
    CreateCameraSetup = ",",
    CameraSetupSetField = "whichSetup, whichField, value, duration,",
    CameraSetupGetField = "whichSetup, whichField,",
    CameraSetupSetDestPosition = "whichSetup, x, y, duration,",
    CameraSetupGetDestPositionLoc = "whichSetup,",
    CameraSetupGetDestPositionX = "whichSetup,",
    CameraSetupGetDestPositionY = "whichSetup,",
    CameraSetupApply = "whichSetup, doPan, panTimed,",
    CameraSetupApplyWithZ = "whichSetup, zDestOffset,",
    CameraSetupApplyForceDuration = "whichSetup, doPan, forceDuration,",
    CameraSetupApplyForceDurationWithZ = "whichSetup, zDestOffset, forceDuration,",
    BlzCameraSetupSetLabel = "whichSetup, label,",
    BlzCameraSetupGetLabel = "whichSetup,",
    CameraSetTargetNoise = "mag, velocity,",
    CameraSetSourceNoise = "mag, velocity,",
    CameraSetTargetNoiseEx = "mag, velocity, vertOnly,",
    CameraSetSourceNoiseEx = "mag, velocity, vertOnly,",
    CameraSetSmoothingFactor = "factor,",
    CameraSetFocalDistance = "distance,",
    CameraSetDepthOfFieldScale = "scale,",
    SetCineFilterTexture = "filename,",
    SetCineFilterBlendMode = "whichMode,",
    SetCineFilterTexMapFlags = "whichFlags,",
    SetCineFilterStartUV = "minu, minv, maxu, maxv,",
    SetCineFilterEndUV = "minu, minv, maxu, maxv,",
    SetCineFilterStartColor = "red, green, blue, alpha,",
    SetCineFilterEndColor = "red, green, blue, alpha,",
    SetCineFilterDuration = "duration,",
    DisplayCineFilter = "flag,",
    IsCineFilterDisplayed = ",",
    SetCinematicScene = "portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration,",
    EndCinematicScene = ",",
    ForceCinematicSubtitles = "flag,",
    SetCinematicAudio = "cinematicAudio,",
    GetCameraMargin = "whichMargin,",
    GetCameraBoundMinX = ",",
    GetCameraBoundMinY = ",",
    GetCameraBoundMaxX = ",",
    GetCameraBoundMaxY = ",",
    GetCameraField = "whichField,",
    GetCameraTargetPositionX = ",",
    GetCameraTargetPositionY = ",",
    GetCameraTargetPositionZ = ",",
    GetCameraTargetPositionLoc = ",",
    GetCameraEyePositionX = ",",
    GetCameraEyePositionY = ",",
    GetCameraEyePositionZ = ",",
    GetCameraEyePositionLoc = ",",
    NewSoundEnvironment = "environmentName,",
    CreateSound = "fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting,",
    CreateSoundFilenameWithLabel = "fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, SLKEntryName,",
    CreateSoundFromLabel = "soundLabel, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate,",
    CreateMIDISound = "soundLabel, fadeInRate, fadeOutRate,",
    SetSoundParamsFromLabel = "soundHandle, soundLabel,",
    SetSoundDistanceCutoff = "soundHandle, cutoff,",
    SetSoundChannel = "soundHandle, channel,",
    SetSoundVolume = "soundHandle, volume,",
    SetSoundPitch = "soundHandle, pitch,",
    SetSoundPlayPosition = "soundHandle, millisecs,",
    SetSoundDistances = "soundHandle, minDist, maxDist,",
    SetSoundConeAngles = "soundHandle, inside, outside, outsideVolume,",
    SetSoundConeOrientation = "soundHandle, x, y, z,",
    SetSoundPosition = "soundHandle, x, y, z,",
    SetSoundVelocity = "soundHandle, x, y, z,",
    AttachSoundToUnit = "soundHandle, whichUnit,",
    StartSound = "soundHandle,",
    StartSoundEx = "soundHandle, fadeIn,",
    StopSound = "soundHandle, killWhenDone, fadeOut,",
    KillSoundWhenDone = "soundHandle,",
    SetMapMusic = "musicName, random, index,",
    ClearMapMusic = ",",
    PlayMusic = "musicName,",
    PlayMusicEx = "musicName, frommsecs, fadeinmsecs,",
    StopMusic = "fadeOut,",
    ResumeMusic = ",",
    PlayThematicMusic = "musicFileName,",
    PlayThematicMusicEx = "musicFileName, frommsecs,",
    EndThematicMusic = ",",
    SetMusicVolume = "volume,",
    SetMusicPlayPosition = "millisecs,",
    SetThematicMusicVolume = "volume,",
    SetThematicMusicPlayPosition = "millisecs,",
    SetSoundDuration = "soundHandle, duration,",
    GetSoundDuration = "soundHandle,",
    GetSoundFileDuration = "musicFileName,",
    VolumeGroupSetVolume = "vgroup, scale,",
    VolumeGroupReset = ",",
    GetSoundIsPlaying = "soundHandle,",
    GetSoundIsLoading = "soundHandle,",
    RegisterStackedSound = "soundHandle, byPosition, rectwidth, rectheight,",
    UnregisterStackedSound = "soundHandle, byPosition, rectwidth, rectheight,",
    SetSoundFacialAnimationLabel = "soundHandle, animationLabel,",
    SetSoundFacialAnimationGroupLabel = "soundHandle, groupLabel,",
    SetSoundFacialAnimationSetFilepath = "soundHandle, animationSetFilepath,",
    SetDialogueSpeakerNameKey = "soundHandle, speakerName,",
    GetDialogueSpeakerNameKey = "soundHandle,",
    SetDialogueTextKey = "soundHandle, dialogueText,",
    GetDialogueTextKey = "soundHandle,",
    AddWeatherEffect = "where, effectID,",
    RemoveWeatherEffect = "whichEffect,",
    EnableWeatherEffect = "whichEffect, enable,",
    TerrainDeformCrater = "x, y, radius, depth, duration, permanent,",
    TerrainDeformRipple = "x, y, radius, depth, duration, count, spaceWaves, timeWaves, radiusStartPct, limitNeg,",
    TerrainDeformWave = "x, y, dirX, dirY, distance, speed, radius, depth, trailTime, count,",
    TerrainDeformRandom = "x, y, radius, minDelta, maxDelta, duration, updateInterval,",
    TerrainDeformStop = "deformation, duration,",
    TerrainDeformStopAll = ",",
    AddSpecialEffect = "modelName, x, y,",
    AddSpecialEffectLoc = "modelName, where,",
    AddSpecialEffectTarget = "modelName, targetWidget, attachPointName,",
    DestroyEffect = "whichEffect,",
    AddSpellEffect = "abilityString, t, x, y,",
    AddSpellEffectLoc = "abilityString, t, where,",
    AddSpellEffectById = "abilityId, t, x, y,",
    AddSpellEffectByIdLoc = "abilityId, t, where,",
    AddSpellEffectTarget = "modelName, t, targetWidget, attachPoint,",
    AddSpellEffectTargetById = "abilityId, t, targetWidget, attachPoint,",
    AddLightning = "codeName, checkVisibility, x1, y1, x2, y2,",
    AddLightningEx = "codeName, checkVisibility, x1, y1, z1, x2, y2, z2,",
    DestroyLightning = "whichBolt,",
    MoveLightning = "whichBolt, checkVisibility, x1, y1, x2, y2,",
    MoveLightningEx = "whichBolt, checkVisibility, x1, y1, z1, x2, y2, z2,",
    BlzGetTriggerFrameText = ",",
    GetLightningColorA = "whichBolt,",
    GetLightningColorR = "whichBolt,",
    GetLightningColorG = "whichBolt,",
    GetLightningColorB = "whichBolt,",
    SetLightningColor = "whichBolt, r, g, b, a,",
    GetAbilityEffect = "abilityString, t, index,",
    GetAbilityEffectById = "abilityId, t, index,",
    GetAbilitySound = "abilityString, t,",
    GetAbilitySoundById = "abilityId, t,",
    GetTerrainCliffLevel = "x, y,",
    SetWaterBaseColor = "red, green, blue, alpha,",
    SetWaterDeforms = "val,",
    GetTerrainType = "x, y,",
    GetTerrainVariance = "x, y,",
    SetTerrainType = "x, y, terrainType, variation, area, shape,",
    IsTerrainPathable = "x, y, t,",
    SetTerrainPathable = "x, y, t, flag,",
    CreateImage = "file, sizeX, sizeY, sizeZ, posX, posY, posZ, originX, originY, originZ, imageType,",
    DestroyImage = "whichImage,",
    ShowImage = "whichImage, flag,",
    SetImageConstantHeight = "whichImage, flag, height,",
    SetImagePosition = "whichImage, x, y, z,",
    SetImageColor = "whichImage, red, green, blue, alpha,",
    SetImageRender = "whichImage, flag,",
    SetImageRenderAlways = "whichImage, flag,",
    SetImageAboveWater = "whichImage, flag, useWaterAlpha,",
    SetImageType = "whichImage, imageType,",
    CreateUbersplat = "x, y, name, red, green, blue, alpha, forcePaused, noBirthTime,",
    DestroyUbersplat = "whichSplat,",
    ResetUbersplat = "whichSplat,",
    FinishUbersplat = "whichSplat,",
    ShowUbersplat = "whichSplat, flag,",
    SetUbersplatRender = "whichSplat, flag,",
    SetUbersplatRenderAlways = "whichSplat, flag,",
    SetBlight = "whichPlayer, x, y, radius, addBlight,",
    SetBlightRect = "whichPlayer, r, addBlight,",
    SetBlightPoint = "whichPlayer, x, y, addBlight,",
    SetBlightLoc = "whichPlayer, whichLocation, radius, addBlight,",
    CreateBlightedGoldmine = "id, x, y, face,",
    IsPointBlighted = "x, y,",
    SetDoodadAnimation = "x, y, radius, doodadID, nearestOnly, animName, animRandom,",
    SetDoodadAnimationRect = "r, doodadID, animName, animRandom,",
    StartMeleeAI = "num, script,",
    StartCampaignAI = "num, script,",
    CommandAI = "num, command, data,",
    PauseCompAI = "p, pause,",
    GetAIDifficulty = "num,",
    RemoveGuardPosition = "hUnit,",
    RecycleGuardPosition = "hUnit,",
    RemoveAllGuardPositions = "num,",
    Cheat = "cheatStr,",
    IsNoVictoryCheat = ",",
    IsNoDefeatCheat = ",",
    Preload = "filename,",
    PreloadEnd = "timeout,",
    PreloadStart = ",",
    PreloadRefresh = ",",
    PreloadEndEx = ",",
    PreloadGenClear = ",",
    PreloadGenStart = ",",
    PreloadGenEnd = "filename,",
    Preloader = "filename,",
    BlzHideCinematicPanels = "enable,",
    AutomationSetTestType = "testType,",
    AutomationTestStart = "testName,",
    AutomationTestEnd = ",",
    AutomationTestingFinished = ",",
    BlzGetTriggerPlayerMouseX = ",",
    BlzGetTriggerPlayerMouseY = ",",
    BlzGetTriggerPlayerMousePosition = ",",
    BlzGetTriggerPlayerMouseButton = ",",
    BlzSetAbilityTooltip = "abilCode, tooltip, level,",
    BlzSetAbilityActivatedTooltip = "abilCode, tooltip, level,",
    BlzSetAbilityExtendedTooltip = "abilCode, extendedTooltip, level,",
    BlzSetAbilityActivatedExtendedTooltip = "abilCode, extendedTooltip, level,",
    BlzSetAbilityResearchTooltip = "abilCode, researchTooltip, level,",
    BlzSetAbilityResearchExtendedTooltip = "abilCode, researchExtendedTooltip, level,",
    BlzGetAbilityTooltip = "abilCode, level,",
    BlzGetAbilityActivatedTooltip = "abilCode, level,",
    BlzGetAbilityExtendedTooltip = "abilCode, level,",
    BlzGetAbilityActivatedExtendedTooltip = "abilCode, level,",
    BlzGetAbilityResearchTooltip = "abilCode, level,",
    BlzGetAbilityResearchExtendedTooltip = "abilCode, level,",
    BlzSetAbilityIcon = "abilCode, iconPath,",
    BlzGetAbilityIcon = "abilCode,",
    BlzSetAbilityActivatedIcon = "abilCode, iconPath,",
    BlzGetAbilityActivatedIcon = "abilCode,",
    BlzGetAbilityPosX = "abilCode,",
    BlzGetAbilityPosY = "abilCode,",
    BlzSetAbilityPosX = "abilCode, x,",
    BlzSetAbilityPosY = "abilCode, y,",
    BlzGetAbilityActivatedPosX = "abilCode,",
    BlzGetAbilityActivatedPosY = "abilCode,",
    BlzSetAbilityActivatedPosX = "abilCode, x,",
    BlzSetAbilityActivatedPosY = "abilCode, y,",
    BlzGetUnitMaxHP = "whichUnit,",
    BlzSetUnitMaxHP = "whichUnit, hp,",
    BlzGetUnitMaxMana = "whichUnit,",
    BlzSetUnitMaxMana = "whichUnit, mana,",
    BlzSetItemName = "whichItem, name,",
    BlzSetItemDescription = "whichItem, description,",
    BlzGetItemDescription = "whichItem,",
    BlzSetItemTooltip = "whichItem, tooltip,",
    BlzGetItemTooltip = "whichItem,",
    BlzSetItemExtendedTooltip = "whichItem, extendedTooltip,",
    BlzGetItemExtendedTooltip = "whichItem,",
    BlzSetItemIconPath = "whichItem, iconPath,",
    BlzGetItemIconPath = "whichItem,",
    BlzSetUnitName = "whichUnit, name,",
    BlzSetHeroProperName = "whichUnit, heroProperName,",
    BlzGetUnitBaseDamage = "whichUnit, weaponIndex,",
    BlzSetUnitBaseDamage = "whichUnit, baseDamage, weaponIndex,",
    BlzGetUnitDiceNumber = "whichUnit, weaponIndex,",
    BlzSetUnitDiceNumber = "whichUnit, diceNumber, weaponIndex,",
    BlzGetUnitDiceSides = "whichUnit, weaponIndex,",
    BlzSetUnitDiceSides = "whichUnit, diceSides, weaponIndex,",
    BlzGetUnitAttackCooldown = "whichUnit, weaponIndex,",
    BlzSetUnitAttackCooldown = "whichUnit, cooldown, weaponIndex,",
    BlzSetSpecialEffectColorByPlayer = "whichEffect, whichPlayer,",
    BlzSetSpecialEffectColor = "whichEffect, r, g, b,",
    BlzSetSpecialEffectAlpha = "whichEffect, alpha,",
    BlzSetSpecialEffectScale = "whichEffect, scale,",
    BlzSetSpecialEffectPosition = "whichEffect, x, y, z,",
    BlzSetSpecialEffectHeight = "whichEffect, height,",
    BlzSetSpecialEffectTimeScale = "whichEffect, timeScale,",
    BlzSetSpecialEffectTime = "whichEffect, time,",
    BlzSetSpecialEffectOrientation = "whichEffect, yaw, pitch, roll,",
    BlzSetSpecialEffectYaw = "whichEffect, yaw,",
    BlzSetSpecialEffectPitch = "whichEffect, pitch,",
    BlzSetSpecialEffectRoll = "whichEffect, roll,",
    BlzSetSpecialEffectX = "whichEffect, x,",
    BlzSetSpecialEffectY = "whichEffect, y,",
    BlzSetSpecialEffectZ = "whichEffect, z,",
    BlzSetSpecialEffectPositionLoc = "whichEffect, loc,",
    BlzGetLocalSpecialEffectX = "whichEffect,",
    BlzGetLocalSpecialEffectY = "whichEffect,",
    BlzGetLocalSpecialEffectZ = "whichEffect,",
    BlzSpecialEffectClearSubAnimations = "whichEffect,",
    BlzSpecialEffectRemoveSubAnimation = "whichEffect, whichSubAnim,",
    BlzSpecialEffectAddSubAnimation = "whichEffect, whichSubAnim,",
    BlzPlaySpecialEffect = "whichEffect, whichAnim,",
    BlzPlaySpecialEffectWithTimeScale = "whichEffect, whichAnim, timeScale,",
    BlzGetAnimName = "whichAnim,",
    BlzGetUnitArmor = "whichUnit,",
    BlzSetUnitArmor = "whichUnit, armorAmount,",
    BlzUnitHideAbility = "whichUnit, abilId, flag,",
    BlzUnitDisableAbility = "whichUnit, abilId, flag, hideUI,",
    BlzUnitCancelTimedLife = "whichUnit,",
    BlzIsUnitSelectable = "whichUnit,",
    BlzIsUnitInvulnerable = "whichUnit,",
    BlzUnitInterruptAttack = "whichUnit,",
    BlzGetUnitCollisionSize = "whichUnit,",
    BlzGetAbilityManaCost = "abilId, level,",
    BlzGetAbilityCooldown = "abilId, level,",
    BlzSetUnitAbilityCooldown = "whichUnit, abilId, level, cooldown,",
    BlzGetUnitAbilityCooldown = "whichUnit, abilId, level,",
    BlzGetUnitAbilityCooldownRemaining = "whichUnit, abilId,",
    BlzEndUnitAbilityCooldown = "whichUnit, abilCode,",
    BlzStartUnitAbilityCooldown = "whichUnit, abilCode, cooldown,",
    BlzGetUnitAbilityManaCost = "whichUnit, abilId, level,",
    BlzSetUnitAbilityManaCost = "whichUnit, abilId, level, manaCost,",
    BlzGetLocalUnitZ = "whichUnit,",
    BlzDecPlayerTechResearched = "whichPlayer, techid, levels,",
    BlzSetEventDamage = "damage,",
    BlzGetEventDamageTarget = ",",
    BlzGetEventAttackType = ",",
    BlzGetEventDamageType = ",",
    BlzGetEventWeaponType = ",",
    BlzSetEventAttackType = "attackType,",
    BlzSetEventDamageType = "damageType,",
    BlzSetEventWeaponType = "weaponType,",
    BlzGetEventIsAttack = ",",
    RequestExtraIntegerData = "dataType, whichPlayer, param1, param2, param3, param4, param5, param6,",
    RequestExtraBooleanData = "dataType, whichPlayer, param1, param2, param3, param4, param5, param6,",
    RequestExtraStringData = "dataType, whichPlayer, param1, param2, param3, param4, param5, param6,",
    RequestExtraRealData = "dataType, whichPlayer, param1, param2, param3, param4, param5, param6,",
    BlzGetUnitZ = "whichUnit,",
    BlzEnableSelections = "enableSelection, enableSelectionCircle,",
    BlzIsSelectionEnabled = ",",
    BlzIsSelectionCircleEnabled = ",",
    BlzCameraSetupApplyForceDurationSmooth = "whichSetup, doPan, forcedDuration, easeInDuration, easeOutDuration, smoothFactor,",
    BlzEnableTargetIndicator = "enable,",
    BlzIsTargetIndicatorEnabled = ",",
    BlzShowTerrain = "show,",
    BlzShowSkyBox = "show,",
    BlzStartRecording = "fps,",
    BlzEndRecording = ",",
    BlzShowUnitTeamGlow = "whichUnit, show,",
    BlzGetOriginFrame = "frameType, index,",
    BlzEnableUIAutoPosition = "enable,",
    BlzHideOriginFrames = "enable,",
    BlzConvertColor = "a, r, g, b,",
    BlzLoadTOCFile = "TOCFile,",
    BlzCreateFrame = "name, owner, priority, createContext,",
    BlzCreateSimpleFrame = "name, owner, createContext,",
    BlzCreateFrameByType = "typeName, name, owner, inherits, createContext,",
    BlzDestroyFrame = "frame,",
    BlzFrameSetPoint = "frame, point, relative, relativePoint, x, y,",
    BlzFrameSetAbsPoint = "frame, point, x, y,",
    BlzFrameClearAllPoints = "frame,",
    BlzFrameSetAllPoints = "frame, relative,",
    BlzFrameSetVisible = "frame, visible,",
    BlzFrameIsVisible = "frame,",
    BlzGetFrameByName = "name, createContext,",
    BlzFrameGetName = "frame,",
    BlzFrameClick = "frame,",
    BlzFrameSetText = "frame, text,",
    BlzFrameGetText = "frame,",
    BlzFrameAddText = "frame, text,",
    BlzFrameSetTextSizeLimit = "frame, size,",
    BlzFrameGetTextSizeLimit = "frame,",
    BlzFrameSetTextColor = "frame, color,",
    BlzFrameSetFocus = "frame, flag,",
    BlzFrameSetModel = "frame, modelFile, cameraIndex,",
    BlzFrameSetEnable = "frame, enabled,",
    BlzFrameGetEnable = "frame,",
    BlzFrameSetAlpha = "frame, alpha,",
    BlzFrameGetAlpha = "frame,",
    BlzFrameSetSpriteAnimate = "frame, primaryProp, flags,",
    BlzFrameSetTexture = "frame, texFile, flag, blend,",
    BlzFrameSetScale = "frame, scale,",
    BlzFrameSetTooltip = "frame, tooltip,",
    BlzFrameCageMouse = "frame, enable,",
    BlzFrameSetValue = "frame, value,",
    BlzFrameGetValue = "frame,",
    BlzFrameSetMinMaxValue = "frame, minValue, maxValue,",
    BlzFrameSetStepSize = "frame, stepSize,",
    BlzFrameSetSize = "frame, width, height,",
    BlzFrameSetVertexColor = "frame, color,",
    BlzFrameSetLevel = "frame, level,",
    BlzFrameSetParent = "frame, parent,",
    BlzFrameGetParent = "frame,",
    BlzFrameGetHeight = "frame,",
    BlzFrameGetWidth = "frame,",
    BlzFrameSetFont = "frame, fileName, height, flags,",
    BlzFrameSetTextAlignment = "frame, vert, horz,",
    BlzFrameGetChildrenCount = "frame,",
    BlzFrameGetChild = "frame, index,",
    BlzTriggerRegisterFrameEvent = "whichTrigger, frame, eventId,",
    BlzGetTriggerFrame = ",",
    BlzGetTriggerFrameEvent = ",",
    BlzGetTriggerFrameValue = ",",
    BlzGetTriggerTextFrame = ",",
    BlzTriggerRegisterPlayerSyncEvent = "whichTrigger, whichPlayer, prefix, fromServer,",
    BlzSendSyncData = "prefix, data,",
    BlzGetTriggerSyncPrefix = ",",
    BlzGetTriggerSyncData = ",",
    BlzTriggerRegisterPlayerKeyEvent = "whichTrigger, whichPlayer, key, metaKey, keyDown,",
    BlzGetTriggerPlayerKey = ",",
    BlzGetTriggerPlayerMetaKey = ",",
    BlzGetTriggerPlayerIsKeyDown = ",",
    BlzEnableCursor = "enable,",
    BlzSetMousePos = "x, y,",
    BlzGetLocalClientWidth = ",",
    BlzGetLocalClientHeight = ",",
    BlzIsLocalClientActive = ",",
    BlzGetMouseFocusUnit = ",",
    BlzChangeMinimapTerrainTex = "texFile,",
    BlzGetLocale = ",",
    BlzGetSpecialEffectScale = "whichEffect,",
    BlzSetSpecialEffectMatrixScale = "whichEffect, x, y, z,",
    BlzResetSpecialEffectMatrix = "whichEffect,",
    BlzGetUnitAbility = "whichUnit, abilId,",
    BlzGetUnitAbilityByIndex = "whichUnit, index,",
    BlzGetAbilityId = "whichAbility,",
    BlzDisplayChatMessage = "whichPlayer, recipient, message,",
    BlzPauseUnitEx = "whichUnit, flag,",
    BlzSetUnitFacingEx = "whichUnit, facingAngle,",
    CreateCommandButtonEffect = "abilityId, order,",
    CreateUpgradeCommandButtonEffect = "whichUprgade,",
    CreateLearnCommandButtonEffect = "abilityId,",DestroyCommandButtonEffect = "whichEffect,",
    BlzBitOr = "x, y,",
    BlzBitAnd = "x, y,",
    BlzBitXor = "x, y,",
    BlzGetAbilityBooleanField = "whichAbility, whichField,",
    BlzGetAbilityIntegerField = "whichAbility, whichField,",
    BlzGetAbilityRealField = "whichAbility, whichField,",
    BlzGetAbilityStringField = "whichAbility, whichField,",
    BlzGetAbilityBooleanLevelField = "whichAbility, whichField, level,",
    BlzGetAbilityIntegerLevelField = "whichAbility, whichField, level,",
    BlzGetAbilityRealLevelField = "whichAbility, whichField, level,",
    BlzGetAbilityStringLevelField = "whichAbility, whichField, level,",
    BlzGetAbilityBooleanLevelArrayField = "whichAbility, whichField, level, index,",
    BlzGetAbilityIntegerLevelArrayField = "whichAbility, whichField, level, index,",
    BlzGetAbilityRealLevelArrayField = "whichAbility, whichField, level, index,",
    BlzGetAbilityStringLevelArrayField = "whichAbility, whichField, level, index,",
    BlzSetAbilityBooleanField = "whichAbility, whichField, value,",
    BlzSetAbilityIntegerField = "whichAbility, whichField, value,",
    BlzSetAbilityRealField = "whichAbility, whichField, value,",
    BlzSetAbilityStringField = "whichAbility, whichField, value,",
    BlzSetAbilityBooleanLevelField = "whichAbility, whichField, level, value,",
    BlzSetAbilityIntegerLevelField = "whichAbility, whichField, level, value,",
    BlzSetAbilityRealLevelField = "whichAbility, whichField, level, value,",
    BlzSetAbilityStringLevelField = "whichAbility, whichField, level, value,",
    BlzSetAbilityBooleanLevelArrayField = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityIntegerLevelArrayField = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityRealLevelArrayField = "whichAbility, whichField, level, index, value,",
    BlzSetAbilityStringLevelArrayField = "whichAbility, whichField, level, index, value,",
    BlzAddAbilityBooleanLevelArrayField = "whichAbility, whichField, level, value,",
    BlzAddAbilityIntegerLevelArrayField = "whichAbility, whichField, level, value,",
    BlzAddAbilityRealLevelArrayField = "whichAbility, whichField, level, value,",
    BlzAddAbilityStringLevelArrayField = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityBooleanLevelArrayField = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityIntegerLevelArrayField = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityRealLevelArrayField = "whichAbility, whichField, level, value,",
    BlzRemoveAbilityStringLevelArrayField = "whichAbility, whichField, level, value,",
    BlzGetItemAbilityByIndex = "whichItem, index,",
    BlzGetItemAbility = "whichItem, abilCode,",
    BlzItemAddAbility = "whichItem, abilCode,",
    BlzGetItemBooleanField = "whichItem, whichField,",
    BlzGetItemIntegerField = "whichItem, whichField,",
    BlzGetItemRealField = "whichItem, whichField,",
    BlzGetItemStringField = "whichItem, whichField,",
    BlzSetItemBooleanField = "whichItem, whichField, value,",
    BlzSetItemIntegerField = "whichItem, whichField, value,",
    BlzSetItemRealField = "whichItem, whichField, value,",
    BlzSetItemStringField = "whichItem, whichField, value,",
    BlzItemRemoveAbility = "whichItem, abilCode,",
    BlzGetUnitBooleanField = "whichUnit, whichField,",
    BlzGetUnitIntegerField = "whichUnit, whichField,",
    BlzGetUnitRealField = "whichUnit, whichField,",
    BlzGetUnitStringField = "whichUnit, whichField,",
    BlzSetUnitBooleanField = "whichUnit, whichField, value,",
    BlzSetUnitIntegerField = "whichUnit, whichField, value,",
    BlzSetUnitRealField = "whichUnit, whichField, value,",
    BlzSetUnitStringField = "whichUnit, whichField, value,",
    BlzGetUnitWeaponBooleanField = "whichUnit, whichField, index,",
    BlzGetUnitWeaponIntegerField = "whichUnit, whichField, index,",
    BlzGetUnitWeaponRealField = "whichUnit, whichField, index,",
    BlzGetUnitWeaponStringField = "whichUnit, whichField, index,",
    BlzSetUnitWeaponBooleanField = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponIntegerField = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponRealField = "whichUnit, whichField, index, value,",
    BlzSetUnitWeaponStringField = "whichUnit, whichField, index, value,",
    BlzGetUnitSkin = "whichUnit,",
    BlzGetItemSkin = "whichItem,",
    BlzSetUnitSkin = "whichUnit, skinId,",
    BlzSetItemSkin = "whichItem, skinId,",
    BlzCreateItemWithSkin = "itemid, x, y, skinId,",
    BlzCreateUnitWithSkin = "id, unitid, x, y, face, skinId,",
    BlzCreateDestructableWithSkin = "objectid, x, y, face, scale, variation, skinId,",
    BlzCreateDestructableZWithSkin = "objectid, x, y, z, face, scale, variation, skinId,",
    BlzCreateDeadDestructableWithSkin = "objectid, x, y, face, scale, variation, skinId,",
    BlzCreateDeadDestructableZWithSkin = "objectid, x, y, z, face, scale, variation, skinId,",
    BlzGetPlayerTownHallCount = "whichPlayer,",
    BlzQueueImmediateOrderById = "whichUnit, order,",
    BlzQueuePointOrderById = "whichUnit, order, x, y,",
    BlzQueueTargetOrderById = "whichUnit, order, targetWidget,",
    BlzQueueInstantPointOrderById = "whichUnit, order, x, y, instantTargetWidget,",
    BlzQueueInstantTargetOrderById = "whichUnit, order, targetWidget, instantTargetWidget,",
    BlzQueueBuildOrderById = "whichPeon, unitId, x, y,",
    BlzQueueNeutralImmediateOrderById = "forWhichPlayer, neutralStructure, unitId,",
    BlzQueueNeutralPointOrderById = "forWhichPlayer, neutralStructure, unitId, x, y,",
    BlzQueueNeutralTargetOrderById = "forWhichPlayer, neutralStructure, unitId, target,",
    BlzGetUnitOrderCount = "whichUnit,",
    BlzUnitClearOrders = "whichUnit, onlyQueued,",
    BlzUnitForceStopOrder = "whichUnit, clearQueue,",
    FourCC = "whichString,",
    UnitAlive = "whichUnit,",
}